<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://cactusii.github.io/</id>
    <title>STAy&apos;s Blog</title>
    <updated>2023-05-18T02:00:27.698Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://cactusii.github.io/"/>
    <link rel="self" href="https://cactusii.github.io/atom.xml"/>
    <subtitle>记录一些学习工作中的知识点！</subtitle>
    <logo>https://cactusii.github.io/images/avatar.png</logo>
    <icon>https://cactusii.github.io/favicon.ico</icon>
    <rights>All rights reserved 2023, STAy&apos;s Blog</rights>
    <entry>
        <title type="html"><![CDATA[linux标准输入/输出/错误及重定向]]></title>
        <id>https://cactusii.github.io/post/linux-biao-zhun-shu-ru-shu-chu-cuo-wu-ji-chong-ding-xiang/</id>
        <link href="https://cactusii.github.io/post/linux-biao-zhun-shu-ru-shu-chu-cuo-wu-ji-chong-ding-xiang/">
        </link>
        <updated>2023-05-15T06:34:03.000Z</updated>
        <content type="html"><![CDATA[<h3 id="标准输入输出错误">标准输入/输出/错误</h3>
<p>linux下每个进程在运行的过程中都会打开一系列的文件，可以通过<code>lsof -p $pid</code>来查看进程号为pid打开的文件，在<code>/proc/pid/fd/</code>下是该进程打开的文件的链接。其中有三个比较特殊的文件是每个进程都会打开，其文件描述符分为0，1，2，默认分别链接到标准输入(STDIN_FILENO)设备(/dev/stdin)、标准输出(STDOUT_FILENO)设备(/dev/stdout)、标准错误(STDERR_FILENO)(/dev/stderr)设备。</p>
<p>进程在运行的过程中默认情况下产生的输出会写到stdout文件，产生的错误信息写到stderr文件，默认这两个文件会链接到屏幕设备，许多进程从标准输入stdin获取输入，默认链接为键盘设备。如果更改这几个文件的链接位置，就可以实现对其他文件的输入输出。</p>
<h3 id="更换标准输入输出错误">更换标准输入/输出/错误</h3>
<ul>
<li><code>&gt;</code>: 输出重定向到一个文件或设备，覆盖原来的内容</li>
<li><code>&gt;&gt;</code>: 输出重定向到一个文件或设备，追加到末尾</li>
<li><code>&lt;</code>: 输入重定向一个程序</li>
<li><code>&lt;&lt;</code></li>
</ul>
<ol>
<li>输出</li>
</ol>
<pre><code class="language-shell"># echo hello &gt; out.log
# echo hello 1&gt; out.log
</code></pre>
<p>这两个命令的作用是相同的，都是讲echo进程的输出重定向到out.log文件，在这里&gt;左边的1可以省略。</p>
<ol start="2">
<li>错误</li>
</ol>
<pre><code class="language-shell"># echo hello 2&gt; err.log
hello
# echoo hello 2&gt; err.log
</code></pre>
<p>2&gt;表示将进程的错误信息重定向到err.log文件，第一行的命令没有错误信息，因此会输出hello到标准输出，即会显示到屏幕上，第二行输出了一个不存在的指令，这时的错误输出信息会输入到err.log中。</p>
<p>如果需要把输出信息和错误信息都重定向到某个文件：</p>
<pre><code class="language-shell"># echoo hello 1&gt; err.log 2&gt;&amp;1
</code></pre>
<p>这里的1&gt;和前面的用法相同，2&gt;&amp;1是将错误信息<strong>追加</strong>到标准输出中。&gt;&amp;是一个整体，不可分开。</p>
<p>一些例子：</p>
<pre><code class="language-shell"># 错误信息重定向到标准输出，输出重定向到out.log
# cat file 2&gt;&amp;1 &gt;out.log
# 将输出重定向到out.log，错误定向到输出
# cat file &gt;out.log 2&gt;&amp;1
# 将错误和输出重定向更简单的写法
# cat file &amp;&gt; out.log
</code></pre>
<ol start="3">
<li>输入</li>
</ol>
<p>将一个命令的输入重定向为其他文件。</p>
<pre><code class="language-shell"># cat &lt; file.in
</code></pre>
<p>另外还有一种<code>&lt;&lt;</code>的方式，称为here文档，它会从标准输入中持续读入字符，直到匹配到指定的token读取结束。例如<code>cat</code>命令：</p>
<pre><code class="language-shell">cat &lt;&lt; EOF &gt; out.log
&gt; hello
&gt; world
&gt; EOF
</code></pre>
<p>这种方式是将cat 命令的输出重定向到out.log中，其内容是从第二行开始到EOF之前结束，EOF是结束token，可以人为指定为其他字符，例如：</p>
<pre><code class="language-shell">cat &lt;&lt; ENDOFFILE &gt; out.log
&gt; 1
&gt; 2
&gt; 3
&gt; ENDOFFILE
</code></pre>
<p>另一种写法是</p>
<pre><code class="language-shell">cat &gt; out.log &lt;&lt; EOF
&gt; 1
&gt; 2
&gt; 3
&gt; ENDOFFILE
</code></pre>
<p>结果和上面的一致。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[NetworkManager 管理网卡设备]]></title>
        <id>https://cactusii.github.io/post/networkmanager-wang-luo-guan-li/</id>
        <link href="https://cactusii.github.io/post/networkmanager-wang-luo-guan-li/">
        </link>
        <updated>2023-05-09T08:40:37.000Z</updated>
        <content type="html"><![CDATA[<p>linux将物理网络设备抽象为interface，屏蔽了物理网络设备的多样性，通过驱动程序检测固件信息在linux内核中登记，在数据包收发时通过interface进行交互。网络管理工具包括network服务，NetworkManager服务，ipconfig服务、netstat服务等。在REHL8/centos8中弃用了之前版本中网络管理的network服务，使用NetworkManager服务替代。</p>
<p>NetworkManager主要管理两类对象：connection(网卡连接配置)和device(网卡设备)，device对应的是interface，而connection是供设备使用的配置，二者是多对一的关系，但同时只有一个connection对象生效，其中配置文件依然默认存放在<code>/etc/sysconfig/network-scripts/</code>下，配置方式有两种：</p>
<ol>
<li>通过<code>nmcli connection add</code>命令配置，会自动生成配置文件；</li>
<li>手动配置ifcfg文件，通过<code>nmcli connection reload</code>来使其生效；</li>
</ol>
<h2 id="1-nmcli命令参数">1 nmcli命令参数</h2>
<pre><code class="language-shell"># nmcli --help
Usage: nmcli [OPTIONS] OBJECT { COMMAND | help }                              
OPTIONS
  -a, --ask                                ask for missing parameters         
  -c, --colors auto|yes|no                 whether to use colors in output    
  -e, --escape yes|no                      escape columns separators in values         
  -f, --fields &lt;field,...&gt;|all|common      specify fields to output           
  -g, --get-values &lt;field,...&gt;|all|common  shortcut for -m tabular -t -f      
  -h, --help                               print this help                    
  -m, --mode tabular|multiline             output mode                        
  -o, --overview                           overview mode                      
  -p, --pretty                             pretty output                      
  -s, --show-secrets                       allow displaying passwords         
  -t, --terse                              terse output                       
  -v, --version                            show program version               
  -w, --wait &lt;seconds&gt;                     set timeout waiting for finishing operations
                                                            
OBJECT 
  g[eneral]       NetworkManagers general status and operations              
  n[etworking]    overall networking control                                  
  r[adio]         NetworkManager radio switches                               
  c[onnection]    NetworkManagers connections                                
  d[evice]        devices managed by NetworkManager
  a[gent]         NetworkManager secret agent or polkit agent
  m[onitor]       monitor NetworkManager changes
</code></pre>
<h2 id="2-创建connection">2 创建connection</h2>
<ol>
<li>查看当前网络状态</li>
</ol>
<pre><code class="language-shell"># nmcli connection show
NAME         UUID                                  TYPE      DEVICE 
eth0  5fb06bd0-0bb0-7ffb-45f1-d6edd65f3e03  ethernet  eth0
</code></pre>
<p>输出每一行对应一个connection条目。</p>
<ol start="2">
<li>删除当前的connection</li>
</ol>
<pre><code class="language-shell"># nmcli connection delete eth0
Connection 'eth0' (5fb06bd0-0bb0-7ffb-45f1-d6edd65f3e03) successfully deleted.
</code></pre>
<ol start="3">
<li>新建一个connection，使其生效</li>
</ol>
<pre><code class="language-shell"># nmcli connection add ifname eth0 con-name eth1 type ethernet
Connection 'eth1' (7871698e-1a4e-41d0-80c5-24374ced9526) successfully added.
# nmcli connection show
NAME         UUID                                  TYPE      DEVICE 
eth1         e09fedfe-fe0a-4a30-b304-8bc662427e65  ethernet  --
</code></pre>
<p>此时在<code>/etc/sysconfig/network-scripts/</code>下自动生成了一个ifcfg-eth1的配置文件。</p>
<pre><code class="language-shell"># nmcli connection up eth1
Connection successfully activated (D-Bus active path: /org/freedesktop/NetworkManager/ActiveConnec
tion/7)
</code></pre>
<h2 id="3-修改connection">3 修改connection</h2>
<p>修改一个已经存在connection，直接编辑<code>/etc/sysconfig/network-scripts/</code>下对应的配置文件，修改完后：</p>
<pre><code class="language-shell"># nmcli connection reload
</code></pre>
<p>或者直接通过<code>nmcli connection modify</code>命令进行修改。</p>
<pre><code class="language-shell"># nmcli connection modify help
Usage: nmcli connection modify { ARGUMENTS | help }

ARGUMENTS := [id | uuid | path] &lt;ID&gt; ([+|-]&lt;setting&gt;.&lt;property&gt; &lt;value&gt;)+

Modify one or more properties of the connection profile.
The profile is identified by its name, UUID or D-Bus path. For multi-valued
properties you can use optional '+' or '-' prefix to the property name.
The '+' sign allows appending items instead of overwriting the whole value.
The '-' sign allows removing selected items instead of the whole value.

ARGUMENTS := remove &lt;setting&gt;

Remove a setting from the connection profile.

Examples:
nmcli con mod home-wifi wifi.ssid rakosnicek
nmcli con mod em1-1 ipv4.method manual ipv4.addr &quot;192.168.1.2/24, 10.10.1.5/8&quot;
nmcli con mod em1-1 +ipv4.dns 8.8.4.4
nmcli con mod em1-1 -ipv4.dns 1
nmcli con mod em1-1 -ipv6.addr &quot;abbe::cafe/56&quot;
nmcli con mod bond0 +bond.options mii=500
nmcli con mod bond0 -bond.options downdelay
nmcli con mod em1-1 remove sriov
</code></pre>
<h2 id="4-修改device名称">4 修改device名称</h2>
<pre><code class="language-shell"># ip link set dev eth0 down
# ip link set dev eth0 name eth01
</code></pre>
<p>然后将<code>/etc/sysconfig/network-scripts/</code>下的配置文件中的<code>device</code>字段也进行更新。</p>
<pre><code class="language-shell"># ip link set dev eth01 up 
# nmcli connection reload
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[关于串口console登录输入输出数据杂糅问题解决]]></title>
        <id>https://cactusii.github.io/post/guan-yu-chuan-kou-console-deng-lu-shu-ru-shu-chu-shu-ju-za-rou-wen-ti-jie-jue/</id>
        <link href="https://cactusii.github.io/post/guan-yu-chuan-kou-console-deng-lu-shu-ru-shu-chu-shu-ju-za-rou-wen-ti-jie-jue/">
        </link>
        <updated>2023-05-09T02:55:17.000Z</updated>
        <content type="html"><![CDATA[<p>这两天在制作云镜像时，之前的centos6.8旧版本镜像存在一个问题，基于virsh console命令登录虚机，会出现输入输出数据杂糅的问题，导致无法登录。</p>
<h2 id="1-问题复现">1 问题复现</h2>
<pre><code class="language-shell"># virsh console 1
</code></pre>
<figure data-type="image" tabindex="1"><img src="https://cactusii.github.io//post-images/1683688865606.png" alt="" loading="lazy"></figure>
<p>输入的用户名密码要么输不全，要么会混到下次的输入行中。</p>
<h2 id="2-问题分析">2 问题分析</h2>
<p>要想解决此问题，首先要了解一下可以连接linux的设备的类型。</p>
<ol>
<li><strong>串口终端</strong>：与计算机的串行端口相连接的终端设备，通常将串口相连接的设备都是字符设备，串口最大的用途是连接终端，一次常被称为串口终端，这些设备对应的文件位置在<code>/dev/ttySn</code>，设备号通常为<code>ttyS0</code>、<code>ttyS1</code>等。</li>
<li><strong>伪终端</strong>：伪终端是成对的逻辑终端，一个master终端和一个salve终端，其中slave对应<code>/dev/pts/</code>下的一个文件，而master则在内存中标识为一个文件描述符。伪终端由终端模拟器提供，终端模拟器是运行在用户态的一个应用程序。<code>/dev/ptmx</code>是用于创建master和slave的文件，当一个进程打开它时，获得了一个master的文件描述符，同时在<code>/dev/pts</code>下创建一个slave设备文件。master端是更接近用户显示器、键盘的一端，slave端是在虚拟终端上运行的CLI（Command Line Interface，命令行接口）程序。Linux的伪终端驱动程序，会把“master端（如键盘）写入的数据”转发给slave端供程序输入，把“程序写入slave端的数据”转发给master端供（显示器驱动等）读取。<br>
<img src="https://cactusii.github.io//post-images/1683702714124.png" alt="" loading="lazy"><br>
ssh和telnet则是使用伪终端实现的，虚拟终端的个数不受限制。</li>
<li><strong>虚拟终端</strong>：控制台终端通常指与计算直接相连的终端，可以理解为物理终端，例如vmware打开虚机的操作终端界面，按<code>alt+[F1~F6]</code>更换控制台终端，默认情况下可以切换tty1~tty6。<code>/dev/console</code>对应了当前的焦点终端，例如当前使用的是tty3，那么<code>/dev/console/</code>则指<code>/dev/tty3</code>。</li>
</ol>
<p>除此之外，还有<strong>控制终端tty</strong>，控制终端通常是对于前台进程而言的一个概念，每一个前台进程有对应的控制终端，那么<code>/dev/tty</code>就是该进程的设备文件，可以通过<code>ps -ax</code>查看进程与哪个控制终端相连。对于当前登录的shell进程而言，<code>/dev/tty</code>就是shell进程使用的终端，或者直接使用<code>tty</code>命令查看其具体属于的终端设备。</p>
<p><code>virsh console</code>命令是属于串口终端一类，串口终端进程在启动之前会检查grub引导参数，并对相关的配置文件进行读取。</p>
<p>在centos6.8的镜像的<code>/etc/grub.conf</code>的kernel行配置的最后为<code>console=tty0 console=ttyS0,115200n8</code>，其含义是将kernel的启动log输入到tty0和ttyS0，且配置靠后者的优先级更高，即ttyS0作为主要console。</p>
<p>而在<code>/etc/init/serial.conf</code>有一段说明：</p>
<pre><code># How this works:
#
# On boot, a udev helper examines /dev/console. If a serial console is the
# primary console (last console on the commandline in grub),  the event
# 'fedora.serial-console-available &lt;port name&gt; &lt;speed&gt;' is emitted, which
# triggers this script. It waits for the runlevel to finish, ensures
# the proper port is in /etc/securetty, and starts the getty.
#
# If your serial console is not the primary console, or you want a getty
# on serial even if it's not the console, create your own event e.g.
# /etc/init/ttyS0.conf with content:
# # ttyS0 - agetty
# #
# # This service maintains a agetty on ttyS0.
</code></pre>
<p>意思是串口终端如果优先级较高的console配置在grub的commandline中，则会执行此脚本。此脚本中的命令为：</p>
<pre><code>start on fedora.serial-console-available DEV=* and stopped rc RUNLEVEL=[2345]
stop on runlevel [S016]

instance $DEV
respawn
pre-start exec /sbin/securetty $DEV
exec /sbin/agetty /dev/$DEV $SPEED vt100-nav
post-stop exec /sbin/initctl emit --no-wait fedora.serial-console-available DEV=$DEV SPEED=$SPEED
usage 'DEV=ttySX SPEED=Y  - where X is console id and Y is baud rate'
</code></pre>
<p>而在该镜像中的<code>/etc/init/</code>下还存在一个<code>ttyS0.conf</code>脚本文件，该脚本文件是在运行串口终端程序之前执行，其命令为：</p>
<pre><code>start on stopped rc RUNLEVEL=[2345]
stop on starting runlevel [016]
respawn
instance /dev/ttyS0
exec /sbin/agetty /dev/ttyS0 115200 vt100-nav
</code></pre>
<p>我猜是这两个脚本执行重复了，然后我采用了如下的解决方法进行验证。</p>
<h2 id="3-问题解决">3 问题解决</h2>
<ol>
<li>删除<code>/etc/grub.conf</code>commandline行的<code>console=ttyS0,115200n8</code>，或者将其置于<code>console=tty</code>之前，这样<code>/etc/init/serial.conf</code>不会得到执行；</li>
<li>删除<code>/etc/init/ttyS0.conf</code>文件，只执行<code>/etc/init/serial.conf</code>文件。</li>
</ol>
<p>这两种方法均可以解决此问题，后来为了证明不是其他地方出现的问题，又在centos官网下载了6.8版本的镜像进行对比测试，测试结果无差异。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[n-gram]]></title>
        <id>https://cactusii.github.io/post/n-gram/</id>
        <link href="https://cactusii.github.io/post/n-gram/">
        </link>
        <updated>2022-07-12T15:51:21.000Z</updated>
        <content type="html"><![CDATA[<h2 id="n-gram">n-gram</h2>
<h3 id="基本原理">基本原理</h3>
<p>N-gram是一种简单的语言模型，在一些NLP任务中，我们需要判断一句话出现的概率是多少，即这句话是不是符合人的说话习惯，这时就可以利用到N-gram。例如在搜索引擎中输入一个词语，下面会出现多个扩展词条，这种功能其实就可以通过N-gram实现。</p>
<p>N-gram的数据模型很简单，就一条数学表达式：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo>(</mo><mi>s</mi><mo>)</mo><mo>=</mo><mi>p</mi><mo>(</mo><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>w</mi><mi>T</mi></msub><mo>)</mo><mo>=</mo><mi>p</mi><mo>(</mo><msub><mi>w</mi><mn>1</mn></msub><mo>)</mo><mi>p</mi><mo>(</mo><msub><mi>w</mi><mn>2</mn></msub><mi mathvariant="normal">∣</mi><msub><mi>w</mi><mn>1</mn></msub><mo>)</mo><mi>p</mi><mo>(</mo><msub><mi>w</mi><mn>3</mn></msub><mi mathvariant="normal">∣</mi><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo>)</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi>p</mi><mo>(</mo><msub><mi>w</mi><mi>t</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>w</mi><mo>(</mo></msub><mi>T</mi><mo>−</mo><mn>1</mn><mo>)</mo><mo>)</mo></mrow><annotation encoding="application/x-tex">p(s) = p(w_1, w_2, ..., w_T) = p(w_1)p(w_2|w_1)p(w_3|w_1,w_2)...p(w_t|w_1,w_2,...,w_(T-1))
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3551999999999999em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mopen mtight">(</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p>
<p>这个概率公式的意义为：第一次词确认后，看后面的词在前面词出现的情况下出现的概率。</p>
<p>例如，句子 <strong>燕子没有你我可怎么活啊</strong>，分词后 <strong>燕子 没有你 我可 怎么活</strong>。</p>
<p>那么这整句话出现的概率：p(燕子，没有你，我可，怎么活) = p(燕子)p(没有你|燕子)p(我可|燕子，没有你)p(怎么活|燕子，没有你，我可)</p>
<ul>
<li>p(燕子)表示<strong>燕子</strong>这个词在语料库中出现的概率；</li>
<li>p(没有你|燕子)表示在<strong>燕子</strong>后出现<strong>没有你</strong>的概率；</li>
<li>以此类推...</li>
</ul>
<p>把这些概率一次相乘就是整句话出现的概率，然后按照用户输入的词条，取出语料库中概率的topk个词条就可以实现扩展词条的功能。</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo>(</mo><mi>s</mi><mo>)</mo><mo>=</mo><mi>p</mi><mo>(</mo><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>w</mi><mi>T</mi></msub><mo>)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>T</mi></munderover><mi>p</mi><mo>(</mo><msub><mi>w</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi>C</mi><mi>o</mi><mi>n</mi><mi>t</mi><mi>e</mi><mi>x</mi><msub><mi>t</mi><mi>i</mi></msub><mo>)</mo></mrow><annotation encoding="application/x-tex">p(s) = p(w_1,w_2,...,w_T) = \sum_{i=1}^{T}p(w_i|Context_i)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord mathdefault">x</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<p>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mi>o</mi><mi>n</mi><mi>t</mi><mi>e</mi><mi>x</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">Context</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord mathdefault">x</span><span class="mord mathdefault">t</span></span></span></span>就是词语的上下文，例如<strong>我可</strong>的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mi>o</mi><mi>n</mi><mi>t</mi><mi>e</mi><mi>x</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">Context</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord mathdefault">x</span><span class="mord mathdefault">t</span></span></span></span>就是：<strong>燕子、没有你</strong>。</p>
<p>而N-gram假设一个词的之和前N个词相关，即马尔可夫模型的思想。</p>
<h3 id="向量表示">向量表示</h3>
<p>N-Gram是一种基于<strong>统计语言模型</strong>的算法。它的基本思想是将文本里面的内容按照字节进行大小为N的滑动窗口操作，形成了长度是N的字节片段序列。</p>
<p>每一个字节片段称为gram，对所有gram的出现频度进行统计，并且按照事先设定好的阈值进行过滤，形成关键gram列表，也就是这个文本的向量特征空间，列表中的每一种gram就是一个特征向量维度。</p>
<p>例子<br>
比如我们现在使用<strong>单元Unigram</strong>、<strong>二元的Bi-gram</strong>和<strong>三元的Tri-gram</strong>模型来进行特征提取。</p>
<p>我们的训练样本为：</p>
<ol>
<li>我去了北京天安门</li>
<li>我是中国人</li>
</ol>
<p>那么我们对每一个样本进行单元Unigram、二元的Bi-gram和三元的Tri-gram模型提取。</p>
<ol>
<li>
<p>单元Unigram<br>
<strong>我去了北京天安门</strong> =&gt; <strong>/我/去了/北京/天安门/</strong><br>
<strong>我是中国人</strong> =&gt; <strong>/我/是/中国人/</strong></p>
</li>
<li>
<p>二元Bi-gram<br>
<strong>我去了北京天安门</strong> =&gt; <strong>/我 去了/去了 北京/北京 天安门/</strong><br>
<strong>我是中国人</strong> =&gt; <strong>/我 是/是 中国人/</strong></p>
</li>
<li>
<p>三元Tri-gram<br>
<strong>我去了北京天安门</strong> =&gt; <strong>/我 去了 北京/去了 北京 天安门/</strong><br>
<strong>我是中国人</strong> =&gt; <strong>/我 是 中国人/</strong></p>
</li>
</ol>
<p>那么从上面可以得出，我们的特征向量包含我在训练数据中利用单元Unigram，二元Bi-gram，以及三元Tri-gram抽取出的不同特征，组成我的特征向量维度。</p>
<p>然后以后对应一句话，直接进行Unigram，Bi-gram，Tri-gram进行抽取特征，出现哪个特征，就统计它的频数，最后填在特征向量中即可。</p>
<p>比如上面的特征向量我列举一下顺序如：</p>
<p>我、是、中国人、去了、北京、天安门、我 是、是 中国人、我 去了、去了 北京、北京 天安门、我 去了 北京、去了 北京 天安门、 我 是 中国人。</p>
<p><strong>抽取特征过程</strong></p>
<p>那么对于一句话<strong>我是中国人</strong>进行N-gram特征抽取的方法是：</p>
<ol>
<li>
<p>单元Unigram来说<br>
<strong>我是中国人</strong> =&gt; <strong>/我/是/中国人/</strong></p>
</li>
<li>
<p>二元Bi-gram<br>
<strong>我是中国人</strong> =&gt; <strong>/我 是/是 中国人/</strong></p>
</li>
<li>
<p>三元Tri-gram<br>
<strong>我是中国人</strong> =&gt; <strong>/我 是 中国人/</strong></p>
</li>
</ol>
<p>于是我们就在出现的词语维度赋值为1，其余没有出现过的特征赋值为0，相当于one-hot特征，得到特征向量：<code>[1,1,1,0,0,0,1,1,0,0,0,0,0,0,1]</code>，得到的这个特征向量就是我们使用N-gram提取特征方法提取出来的特征。</p>
<h3 id="总结">总结</h3>
<p>如果我们使用N-gram提取特征，使用unigram，bigram，trigram提取特征的情况，在词汇表大小为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi></mrow><annotation encoding="application/x-tex">V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span></span></span></span>的时候，特征向量维度长度为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>[</mo><mi>V</mi><mo>(</mo><mi>u</mi><mi>n</mi><mi>i</mi><mi>g</mi><mi>r</mi><mi>a</mi><mi>m</mi><mo>)</mo><mo>+</mo><msup><mi>V</mi><mn>2</mn></msup><mo>(</mo><mi>b</mi><mi>i</mi><mi>g</mi><mi>r</mi><mi>a</mi><mi>m</mi><mo>)</mo><mo>+</mo><msup><mi>V</mi><mn>3</mn></msup><mo>(</mo><mi>t</mi><mi>r</mi><mi>i</mi><mi>g</mi><mi>r</mi><mi>a</mi><mi>m</mi><mo>)</mo><mo>]</mo></mrow><annotation encoding="application/x-tex">[V(unigram)+V^2(bigram)+V^3(trigram)]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault">m</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">b</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault">m</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault">m</span><span class="mclose">)</span><span class="mclose">]</span></span></span></span>。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[TF-IDF/BM25]]></title>
        <id>https://cactusii.github.io/post/tf-idf-bm25/</id>
        <link href="https://cactusii.github.io/post/tf-idf-bm25/">
        </link>
        <updated>2022-07-12T15:48:21.000Z</updated>
        <content type="html"><![CDATA[<h2 id="tf-idf">TF-IDF</h2>
<p>TF-IDF（term frequency–inverse document frequency，词频-逆向文件频率）是一种用于信息检索（information retrieval）与文本挖掘（text mining）的常用加权技术。TF-IDF是一种<strong>统计方法</strong>，用以评估一字词对于一个文件集或一个语料库中的其中一份文件的重要程度。字词的重要性随着它在文件中出现的次数成正比增加，但同时会随着它在语料库中出现的频率成反比下降。</p>
<p>TF-IDF的主要思想是：<strong>如果某个单词在一篇文章中出现的频率TF高，并且在其他文章中很少出现，则认为此词或者短语具有很好的类别区分能力，适合用来分类</strong>。</p>
<h3 id="tfterm-frequency">TF(Term Frequency)</h3>
<p>词频(TF)：表示词条（关键字）在文本中出现的频率，这个数字通常会被归一化(一般是词频除以文章总词数), 以防止它偏向长的文件。</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><msub><mi>F</mi><mi>w</mi></msub><mo>=</mo><mfrac><mrow><mi mathvariant="normal">在</mi><mi mathvariant="normal">一</mi><mi mathvariant="normal">类</mi><mi mathvariant="normal">中</mi><mi mathvariant="normal">词</mi><mi mathvariant="normal">条</mi><mi>w</mi><mi mathvariant="normal">出</mi><mi mathvariant="normal">现</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">次</mi><mi mathvariant="normal">数</mi></mrow><mrow><mi mathvariant="normal">该</mi><mi mathvariant="normal">类</mi><mi mathvariant="normal">中</mi><mi mathvariant="normal">所</mi><mi mathvariant="normal">有</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">词</mi><mi mathvariant="normal">条</mi><mi mathvariant="normal">数</mi><mi mathvariant="normal">目</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">TF_w = \frac{在一类中词条w出现的次数}{该类中所有的词条数目}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.7935600000000003em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">该</span><span class="mord cjk_fallback">类</span><span class="mord cjk_fallback">中</span><span class="mord cjk_fallback">所</span><span class="mord cjk_fallback">有</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">词</span><span class="mord cjk_fallback">条</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">目</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">在</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">类</span><span class="mord cjk_fallback">中</span><span class="mord cjk_fallback">词</span><span class="mord cjk_fallback">条</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord cjk_fallback">出</span><span class="mord cjk_fallback">现</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">次</span><span class="mord cjk_fallback">数</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<h3 id="idfinverse-document-frequency">IDF(Inverse Document Frequency)</h3>
<p>逆向文件频率(IDF)：某一特定词语的IDF，可以由总文件数目除以包含该词语的文件的数目，再将得到的商取对数得到。</p>
<p>如果包含词条t的文档越少, IDF越大，则说明词条具有很好的类别区分能力。</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi><mi>D</mi><msub><mi>F</mi><mi>w</mi></msub><mo>=</mo><mi>l</mi><mi>o</mi><mi>g</mi><mo>(</mo><mfrac><mrow><mi mathvariant="normal">语</mi><mi mathvariant="normal">料</mi><mi mathvariant="normal">库</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">文</mi><mi mathvariant="normal">档</mi><mi mathvariant="normal">总</mi><mi mathvariant="normal">数</mi></mrow><mrow><mi mathvariant="normal">包</mi><mi mathvariant="normal">含</mi><mi mathvariant="normal">词</mi><mi mathvariant="normal">条</mi><mi>w</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">文</mi><mi mathvariant="normal">档</mi><mi mathvariant="normal">书</mi><mo>+</mo><mn>1</mn></mrow></mfrac><mo>)</mo></mrow><annotation encoding="application/x-tex">IDF_w = log(\frac{语料库的文档总数}{包含词条w的文档书+1})
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.51933em;vertical-align:-0.7693300000000001em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.677em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">包</span><span class="mord cjk_fallback">含</span><span class="mord cjk_fallback">词</span><span class="mord cjk_fallback">条</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">文</span><span class="mord cjk_fallback">档</span><span class="mord cjk_fallback">书</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">语</span><span class="mord cjk_fallback">料</span><span class="mord cjk_fallback">库</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">文</span><span class="mord cjk_fallback">档</span><span class="mord cjk_fallback">总</span><span class="mord cjk_fallback">数</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span></span></p>
<p>+1是为了避免分母为0。</p>
<h3 id="tf-idf-2">TF-IDF</h3>
<p>某一特定文件内的高词语频率，以及该词语在整个文件集合中的低文件频率，可以产生出高权重的TF-IDF。因此，TF-IDF倾向于过滤掉常见的词语，保留重要的词语。</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mi>F</mi><mo>−</mo><mi>I</mi><mi>D</mi><mi>F</mi><mo>=</mo><mi>T</mi><mi>F</mi><mo>∗</mo><mi>I</mi><mi>D</mi><mi>F</mi><mo>=</mo><mfrac><mrow><mi mathvariant="normal">词</mi><mi mathvariant="normal">条</mi><mi>w</mi><mi mathvariant="normal">数</mi><mi mathvariant="normal">量</mi></mrow><mrow><mi mathvariant="normal">单</mi><mi mathvariant="normal">词</mi><mi mathvariant="normal">总</mi><mi mathvariant="normal">数</mi></mrow></mfrac><mo>∗</mo><mi>l</mi><mi>o</mi><mi>g</mi><mo>(</mo><mfrac><mrow><mi mathvariant="normal">文</mi><mi mathvariant="normal">档</mi><mi mathvariant="normal">总</mi><mi mathvariant="normal">数</mi></mrow><mrow><mi mathvariant="normal">包</mi><mi mathvariant="normal">含</mi><mi>w</mi><mi mathvariant="normal">词</mi><mi mathvariant="normal">条</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">文</mi><mi mathvariant="normal">档</mi><mi mathvariant="normal">数</mi><mo>+</mo><mn>1</mn></mrow></mfrac><mo>)</mo></mrow><annotation encoding="application/x-tex">TF-IDF = TF * IDF = \frac{词条w数量}{单词总数}*log(\frac{文档总数}{包含w词条的文档数+1})
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.7935600000000003em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">单</span><span class="mord cjk_fallback">词</span><span class="mord cjk_fallback">总</span><span class="mord cjk_fallback">数</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">词</span><span class="mord cjk_fallback">条</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">量</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.51933em;vertical-align:-0.7693300000000001em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.677em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">包</span><span class="mord cjk_fallback">含</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord cjk_fallback">词</span><span class="mord cjk_fallback">条</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">文</span><span class="mord cjk_fallback">档</span><span class="mord cjk_fallback">数</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">文</span><span class="mord cjk_fallback">档</span><span class="mord cjk_fallback">总</span><span class="mord cjk_fallback">数</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span></span></p>
<p>注：TF-IDF算法非常容易理解，并且很容易实现，但是其简单结构并没有考虑词语的语义信息，无法处理一词多义与一义多词的情况。</p>
<h2 id="bm25">BM25</h2>
<p>BM(Best Match) 计算query与文档相似度得分的算法，是TF-IDF的优化版本，25指25次算法迭代。</p>
<p>BM25的一般公式是：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>c</mi><mi>o</mi><mi>r</mi><mi>e</mi><mo>(</mo><mi>Q</mi><mo separator="true">,</mo><mi>d</mi><mo>)</mo><mo>=</mo><munderover><mo>∑</mo><mi>i</mi><mi>n</mi></munderover><msub><mi>W</mi><mi>i</mi></msub><mi>R</mi><mo>(</mo><msub><mi>q</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>d</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">Score(Q,d)=\sum_i^nW_iR(q_i,d)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mopen">(</span><span class="mord mathdefault">Q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">d</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">d</span><span class="mclose">)</span></span></span></span></span></p>
<p>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Q</mi></mrow><annotation encoding="application/x-tex">Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">Q</span></span></span></span>表示一条query，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">q_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示query中的单词，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span></span></span></span>表示某个搜索文档，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>W</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">W_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示单词权重，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi></mrow><annotation encoding="application/x-tex">R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span></span></span></span>表示<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">q_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和d的相关性。</p>
<p>BM25计算主要有以下几个部分：</p>
<ol>
<li>query中每个单词<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">q_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>与文档d之间的相关性：</li>
</ol>
<blockquote>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mo>(</mo><msub><mi>q</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>d</mi><mo>)</mo><mo>=</mo><mfrac><mrow><mo>(</mo><msub><mi>k</mi><mi>i</mi></msub><mo>+</mo><mn>1</mn><mo>)</mo><mi>t</mi><msub><mi>f</mi><mrow><mi>t</mi><mi>d</mi></mrow></msub></mrow><mrow><mi>K</mi><mo>+</mo><mi>t</mi><msub><mi>f</mi><mrow><mi>t</mi><mi>d</mi></mrow></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">S(q_i,d)=\frac{(k_i+1)tf_{td}}{K+tf_{td}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">d</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.491108em;vertical-align:-0.481108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">t</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.10764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mclose mtight">)</span><span class="mord mathdefault mtight">t</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.10764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>K</mi><mo>=</mo><msub><mi>k</mi><mi>i</mi></msub><mo>(</mo><mn>1</mn><mo>−</mo><mi>b</mi><mo>+</mo><mi>b</mi><mo>∗</mo><mfrac><msub><mi>L</mi><mi>d</mi></msub><mrow><mi>L</mi><mo>+</mo><mrow><mi>a</mi><mi>v</mi><mi>e</mi></mrow></mrow></mfrac></mrow><annotation encoding="application/x-tex">K=k_i(1-b+b*\frac{L_d}{L+{ave}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2975219999999998em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.894191em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight">e</span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.41586em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><msub><mi>f</mi><mrow><mi>t</mi><mi>d</mi></mrow></msub></mrow><annotation encoding="application/x-tex">tf_{td}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是单词在文档d中词频，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mi>d</mi></msub></mrow><annotation encoding="application/x-tex">L_d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是文档d的长度，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mrow><mi>a</mi><mi>v</mi><mi>e</mi></mrow></msub></mrow><annotation encoding="application/x-tex">L_{ave}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是所有文档的平均长度，变量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>k</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">k_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是一个正的参数，用来标准化文章词频的范围，当<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>k</mi><mn>1</mn></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">k_1=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，就是一个二元模型，一个更大的值对应使用更原始的词频信息。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span>是另一个可调参数(0&lt;b&lt;1)，它是用决定使用文档长度来表示信息量的范围：当b为1时，时完全使用文档长度来权衡词的权重，当b为0表示不使用文档长度。</p>
</blockquote>
<ol start="2">
<li>单词<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">q_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>与query之间的相似性：</li>
</ol>
<blockquote>
<p>当query很长时，我们还需要刻画单词与query之间的权重(对于短的query，这一项不是必须的)，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mo>(</mo><msub><mi>q</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>Q</mi><mo>)</mo><mo>=</mo><mfrac><mrow><mo>(</mo><msub><mi>k</mi><mn>3</mn></msub><mo>+</mo><mn>1</mn><mo>)</mo><mi>t</mi><msub><mi>f</mi><mrow><mi>t</mi><mi>q</mi></mrow></msub></mrow><mrow><msub><mi>k</mi><mi>e</mi></msub><mo>+</mo><mi>t</mi><msub><mi>f</mi><mrow><mi>t</mi><mi>q</mi></mrow></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">S(q_i,Q)=\frac{(k_3+1)tf_{tq}}{k_e+tf_{tq}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">Q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.5746399999999998em;vertical-align:-0.5423199999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.03232em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">t</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.29634285714285713em;"><span style="top:-2.357em;margin-left:-0.10764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.50732em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mclose mtight">)</span><span class="mord mathdefault mtight">t</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.29634285714285713em;"><span style="top:-2.357em;margin-left:-0.10764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5423199999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，这里<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><msub><mi>f</mi><mrow><mi>t</mi><mi>q</mi></mrow></msub></mrow><annotation encoding="application/x-tex">tf_{tq}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28055599999999997em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>表示单词在query中的词频，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>k</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">k_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是一个可调正参数，来矫正query中的词频范围。</p>
</blockquote>
<ol start="3">
<li>每个单词的权重：</li>
</ol>
<blockquote>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>W</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">W_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示分词权重，这里用IDF代替：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi><mi>D</mi><mi>F</mi><mo>(</mo><msub><mi>q</mi><mi>i</mi></msub><mo>)</mo><mo>=</mo><mi>l</mi><mi>o</mi><mi>g</mi><mo>(</mo><mfrac><mrow><mi>N</mi><mo>−</mo><mi>d</mi><msub><mi>f</mi><mi>i</mi></msub><mo>+</mo><mn>0.5</mn></mrow><mrow><mi>d</mi><msub><mi>f</mi><mi>i</mi></msub><mo>+</mo><mn>0.5</mn></mrow></mfrac><mo>)</mo></mrow><annotation encoding="application/x-tex">IDF(q_i)=log(\frac{N-df_i+0.5}{df_i+0.5})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.4133239999999998em;vertical-align:-0.481108em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.10764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight">0</span><span class="mord mtight">.</span><span class="mord mtight">5</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">d</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.10764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight">0</span><span class="mord mtight">.</span><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>表示索引中全部文档数量，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><msub><mi>f</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">df_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">d</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示包含了分词<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">q_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的文档个数。根据IDF的作用，对于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">q_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>来说，包含<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">q_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的文档数量越多，说明<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">q_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的重要性越小，或者区分度越低，所以用IDF来刻画<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">q_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>与文档的相似度。</p>
</blockquote>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mi>S</mi><msub><mi>V</mi><mi>d</mi></msub><mo>=</mo><munder><mo>∑</mo><mrow><mi>t</mi><mo>∈</mo><mi>q</mi></mrow></munder><mi>l</mi><mi>o</mi><mi>g</mi><mo>(</mo><mfrac><mi>N</mi><mrow><mi>d</mi><msub><mi>f</mi><mi>t</mi></msub></mrow></mfrac><mo>)</mo><mo>∗</mo><mfrac><mrow><mo>(</mo><msub><mi>k</mi><mn>1</mn></msub><mo>+</mo><mn>1</mn><mo>)</mo><mi>t</mi><msub><mi>f</mi><mrow><mi>t</mi><mi>d</mi></mrow></msub></mrow><mrow><msub><mi>k</mi><mn>1</mn></msub><mo>(</mo><mo>(</mo><mn>1</mn><mo>−</mo><mi>b</mi><mo>)</mo><mo>+</mo><mi>b</mi><mo>∗</mo><mfrac><msub><mi>L</mi><mi>d</mi></msub><msub><mi>L</mi><mrow><mi>a</mi><mi>v</mi><mi>e</mi></mrow></msub></mfrac><mo>)</mo><mo>+</mo><mi>t</mi><msub><mi>f</mi><mrow><mi>t</mi><mi>d</mi></mrow></msub></mrow></mfrac><mo>∗</mo><mfrac><mrow><mo>(</mo><msub><mi>k</mi><mn>3</mn></msub><mo>+</mo><mn>1</mn><mo>)</mo><mi>t</mi><msub><mi>f</mi><mrow><mi>t</mi><mi>q</mi></mrow></msub></mrow><mrow><msub><mi>k</mi><mn>3</mn></msub><mo>+</mo><mi>t</mi><msub><mi>f</mi><mrow><mi>t</mi><mi>q</mi></mrow></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">RSV_d = \sum_{ t\in q}log(\frac{N}{df_t})*\frac{(k_1+1)tf_{td}}{k_1((1-b)+b*\frac{L_d}{L_{ave}})+tf_{td}}*\frac{(k_3+1)tf_{tq}}{k_3+tf_{tq}}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.746443em;vertical-align:-1.386113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0500050000000003em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mrel mtight">∈</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.386113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.656291em;vertical-align:-1.229291em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.215809em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.894191em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.41586em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.229291em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.399108em;vertical-align:-0.972108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28055599999999997em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28055599999999997em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.972108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[向量引擎vearch]]></title>
        <id>https://cactusii.github.io/post/xiang-liang-yin-qing-vearch/</id>
        <link href="https://cactusii.github.io/post/xiang-liang-yin-qing-vearch/">
        </link>
        <updated>2022-07-11T15:54:32.000Z</updated>
        <content type="html"><![CDATA[<p>vearch基于Faiss实现，但 Faiss 本身只是一个能够单机运行的支持各种向量检索模型的机器学习算法基础库，不支持分布式、实时索引和检索，同时也不支持标量字段的存储和索引等等。</p>
<p>主要应用场景：</p>
<ol>
<li>图像/视频/音频检索和去重；</li>
<li>安防领域视频智能监控；</li>
<li>文本相似度计算；</li>
<li>推荐，搜索召回及排序。</li>
</ol>
<h2 id="case">CASE</h2>
<h3 id="1-人脸数据查找索引">1. 人脸数据查找索引</h3>
<figure data-type="image" tabindex="1"><img src="https://pic.leetcode-cn.com/1657552893-TyWbGK-image.png" alt="image.png" loading="lazy"></figure>
<h3 id="2-在线相似性图片搜索">2. 在线相似性图片搜索</h3>
<p>例如电商平台的搜同款。</p>
<figure data-type="image" tabindex="2"><img src="https://pic.leetcode-cn.com/1657552967-UpzLvJ-image.png" alt="image.png" loading="lazy"></figure>
<p>vearch对外提供Restful API，方便对表及数据进行管理。</p>
<h3 id="3-图片去重">3. 图片去重</h3>
<figure data-type="image" tabindex="3"><img src="https://pic.leetcode-cn.com/1657553029-KzTWmq-image.png" alt="image.png" loading="lazy"></figure>
<h3 id="4-搜索推荐系统的召回">4. 搜索/推荐系统的召回</h3>
<p>将数据的各种特征embedding成向量后，利用向量相似性检索做召回。</p>
<h2 id="使用">使用</h2>
<p><a href="https://www.mianshigee.com/tutorial/vearch-zh/quickstart.md">教程文档</a></p>
<p>示例：</p>
<p>查询</p>
<pre><code class="language-json">{
    &quot;query&quot;: {
        &quot;sum&quot;: [{ // 查询特征，支持多个
            &quot;field&quot;: &quot;field_name&quot;, // 指定创建表时特征字段的名称
            &quot;feature&quot;: [0.1, 0.2, 0.3, 0.4, 0.5], // 传递特征，维数和定义表结构时维数必须相同
            &quot;min_score&quot;: 0.9, // 指定返回结果中分值必须大于等于0.9，两个向量计算结果相似度在0-1之间，min_score可以指定返回结果分值最小值，max_score可以指定最大值
            &quot;boost&quot;: 0.5 // boost指定相似度的权重，比如两个向量相似度分值是0.7，boost设置成0.5之后,返回的结果中会将分值0.7乘以0.5即0.35。
        }],
        &quot;filter&quot;: [{ // 过滤条件(数值、标签过滤)，支持多个
            &quot;range&quot;: { 
                &quot;field_name&quot;: {
                    &quot;gte&quot;: 160,
                    &quot;lte&quot;: 180
                }
            }
// range 指定使用数值字段integer/float 过滤， filed_name是数值字段名称， 
// gte、lte指定范围， lte 小于等于， gte大于等于，若使用等值过滤，lte和gte设置相同的值。
// 上述示例表示查询field_name字段大于等于160小于等于180区间的值
        },
        {
             &quot;term&quot;: {
                 &quot;field_name&quot;: [&quot;100&quot;, &quot;200&quot;, &quot;300&quot;],
                 &quot;operator&quot;: &quot;or&quot;
             }
// term 使用标签过滤， field_name是定义的标签字段，允许使用多个值过滤，
// 可以求交“operator”: “or” , 求并: “operator”: “and”，上述示例表示查询field_name字段值是”100”、”200” 或”300”的值。
        }]
    },
    &quot;direct_search_type&quot;: 0, // direct_search_type 指定查询类型，0代表若特征已经创建索引则使用索引，若没有创建则暴力搜索； -1 代表只使用索引进行搜索， 1代表不使用索引只进行暴力搜索。默认值是0。
    &quot;quick&quot;: false, // quick 搜索结果默认将PQ召回向量进行计算和精排，为了加快服务端处理速度设置成true可以指定只召回，不做计算和精排。
    &quot;vector_value&quot;: false, // vector_value为了减小网络开销，搜索结果中默认不包含特征数据只包含标量信息字段，设置成true指定返回结果中包含原始特征数据。
    &quot;online_log_level&quot;: &quot;debug&quot;,
    &quot;size&quot;: 10 // 返回结果数量
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[DeepCTR 特征处理]]></title>
        <id>https://cactusii.github.io/post/deepctr-te-zheng-chu-li/</id>
        <link href="https://cactusii.github.io/post/deepctr-te-zheng-chu-li/">
        </link>
        <updated>2022-07-11T15:52:40.000Z</updated>
        <content type="html"><![CDATA[<p>基于DNN的CTR预测模型基本包含四个步骤：</p>
<ol>
<li>Input</li>
<li>Embedding</li>
<li>Low-order&amp;High-order Feature Extractor</li>
<li>Prediction</li>
</ol>
<h2 id="特征处理">特征处理</h2>
<h3 id="标签编码">标签编码</h3>
<p>一般有两种方法对特征进行编码：</p>
<ol>
<li>映射：即将特征映射到<code>0~len(#unique)-1</code><pre><code class="language-py">for feat in sparse_features:
    lbe = LabelEncoder()
    data[feat] = lbe.fit_transform(data[feat])
</code></pre>
</li>
<li>哈希编码：将特征映射到固定范围，例如<code>0~9999</code><pre><code class="language-py"># 在训练前
for feat in sparse_features:
    lbe = HashEncoder()
    data[feat] = lbe.transform(data[feat])
</code></pre>
或<pre><code class="language-py"># 在训练过程中动态执行特征哈希
# 在SparseFeat或VarlenSparseFeat中将use_hash设为True
</code></pre>
</li>
</ol>
<p>对于密集的数值特征，通常将其离散为桶，<em>可以使用归一化处理</em>：</p>
<pre><code class="language-py">mms = MinMaxScaler(feature_range=(0,1))
data[dense_features] = mms.fit_transform(data[dense_features])
</code></pre>
<h3 id="生成特征columns">生成特征columns</h3>
<p><strong>在Input层之前需要对data特征进行固定格式的组织，即转换为DeepCTR中定义的类型。</strong></p>
<p>在推荐系统中，通常数据的特征有以下几类：</p>
<ol>
<li>ID类特征；</li>
<li>ID序列特征：例如带有先后顺序的行为序列、没有先后顺序的multi-hot编码的ID特征；</li>
<li>数值特征：例如年龄、视频时长、文章字数等，数值向量： 例如图片、视频、文本等向量表示。</li>
</ol>
<p>对于上述三类特征，deepctr分别定义了三种Feature Columns：<code>SparseFeat</code>、<code>VarLenSparseFeat</code>、<code>DenseFeat</code>。</p>
<p>这三个类是标记特征的，在构建模型时，可以通过特征的标记来构建不同的Input层和Embedding层。</p>
<pre><code class="language-py">class SparseFeat(namedtuple('SparseFeat',
                            ['name',  # 特征的名称
                            'vocabulary_size',  # id特征的词典大小
                            'embedding_dim',  # id特征转化成向量的维度
                            'use_hash', 
                            'vocabulary_path', 
                            'dtype', 
                            'embeddings_initializer', # embedding的初始化方式
                            'embedding_name', 
                            'group_name', # 该特征所属的组
                            'trainable'])): # 该id类特征对应的Embedding层是否可训练


class VarLenSparseFeat(namedtuple('VarLenSparseFeat',
                                  ['sparsefeat', 
                                  'maxlen',  # id序列的最大长度
                                  'combiner',  # 序列特征聚合的方式（例如mean pooling）
                                  'length_name', # 序列特征对应的有效长度的特征名（也是一个特征）
                                  'weight_name',  # 序列特征对应聚合权重的特征名（也是一个特征）
                                  'weight_norm'])):


class DenseFeat(namedtuple('DenseFeat',
                           ['name',  # 数值特征的名称
                            'dimension', # 数值特征的维度，注意区分是单个数值特征还是向量数值特征
                            'dtype',  # 数值类型
                            'transform_fn'])): # 数值特征的转换方式，例如有些特征需要做log变换
</code></pre>
<p>使用这些类，可以对每个特征都设置好对应的标记参数，就可以将所有特征自动化的构建对应的Input层和Embedding层了。</p>
<h3 id="input层构建">Input层构建</h3>
<p><strong>Input层的目的是将特征转换为模型能够处理的且比较合适的特征向量。</strong></p>
<p>对于稀疏特征(sparse feature)，通过Embedding将其转换为密集向量，对于密集数值特征(dense numercal feature)，将其concat到全连接层的input tensor中。</p>
<h4 id="input_features构建">input_features构建</h4>
<p>deepctr使用了<code>build_input_features</code>方法来构建Input层，<strong>参数<code>feature_columns</code>，即提前根据特征定义好的特征标记数组</strong>。</p>
<p>该方法返回一个字典<code>input_features</code>，key是特征名，value是特征对应的Input层，便于后续使用。</p>
<pre><code class="language-py">def build_input_features(feature_columns, prefix=''):
    input_features = OrderedDict()
    for fc in feature_columns:
        if isinstance(fc, SparseFeat):
            input_features[fc.name] = Input(shape=(1,), name=prefix + fc.name, dtype=fc.dtype)
        elif isinstance(fc, DenseFeat):
            input_features[fc.name] = Input(shape=(fc.dimension,), name=prefix + fc.name, dtype=fc.dtype)
        elif isinstance(fc, VarLenSparseFeat):
            input_features[fc.name] = Input(shape=(fc.maxlen,), name=prefix + fc.name, dtype=fc.dtype)
            if fc.weight_name is not None:
                input_features[fc.weight_name] = Input(shape=(fc.maxlen, 1), name=prefix + fc.weight_name， dtype=&quot;float32&quot;)
            if fc.length_name is not None:
                input_features[fc.length_name] = Input((1,), name=prefix + fc.length_name, dtype='int32')
        else:
            raise TypeError(&quot;Invalid feature column type,got&quot;, type(fc))
    return input_features
</code></pre>
<h4 id="embedding层的构建">Embedding层的构建</h4>
<p>对于稀疏向量需要借助Embedding映射到低维密集向量(例如id类型的特征)，一般需要两步：</p>
<ol>
<li>根据id类特征的词表大小定义一个Embedding层；</li>
<li>根据id类特征的索引去找这个id对应的Embedding向量。</li>
</ol>
<p><code>input_from_feature_columns</code>函数是将<code>feature_columns</code>再进一步处理，其处理逻辑是：</p>
<ul>
<li>筛选id类/id序列类<code>sparse_feature_columns</code>和数值类<code>varlen_sparse_feature_columns</code>；</li>
<li>对<code>feature_columns</code>创建一个Embedding层的字典，创建逻辑见<code>create_embedding_matrix</code>方法，该方法生成<code>embedding_matrix_dict</code>；</li>
<li><code>input_features/embedding_matrix_dict/sparse_feature_columns</code>  =&gt;  <strong><code>embedding_lookup</code></strong>  =&gt;  <code>group_sparse_embedding_dict</code></li>
<li><code>input_features/embedding_matrix_dict/varlen_sparse_feature_columns</code>  =&gt;  <strong><code>varlen_embedding_lookup/get_varlen_pooling_list</code></strong>  =&gt; <code>group_varlen_sparse_embedding_dict</code></li>
<li><code>group_sparse_embedding_dict/group_varlen_sparse_embedding_dict</code>  =&gt;  <strong><code>mergeDict</code></strong>  =&gt;  <code>group_embedding_dict</code></li>
<li>最终返回embedding后的<code>embedding_dict</code>和<code>dense_value_list</code>。</li>
</ul>
<p>在这里，一些参数：</p>
<ul>
<li><code>embedding_matrix_dict</code>：这个是前面根据<code>feature_column</code>构造的Embedding层，是一个字典，key是特征名，value是特征对应的Embedding层；</li>
<li><code>input_features</code>：这个是前面根据<code>feature_column</code>构造的Input层，是一个字典，key是特征名，value是对应的Input层；</li>
<li><code>sparse_feature_columns</code>：这个是从整个特征标记数组筛选出来的id类特征，因为id类特征和id类序列特征Embedding的处理方式是不一样的，所有这里是将两类特征分开处理的，但是从代码中可以发现，创建Embedding层是放在一起的。</li>
</ul>
<pre><code class="language-py"># input_features是一个Input层的字典
def input_from_feature_columns(input_features, feature_columns, l2_reg, seed, prefix='', seq_mask_zero=True,
                               support_dense=True, support_group=False):
    # 筛选出id类和id序列类特征
    # sparse_feature_columns表示的是id类和id序列类特征
    sparse_feature_columns = list(
        filter(lambda x: isinstance(x, SparseFeat), feature_columns)) if feature_columns else []
    varlen_sparse_feature_columns = list(
        filter(lambda x: isinstance(x, VarLenSparseFeat), feature_columns)) if feature_columns else []

    # 返回一个Embedding层的字典，参数依然是feature_columns
    embedding_matrix_dict = create_embedding_matrix(feature_columns, l2_reg, seed, prefix=prefix,
                                                    seq_mask_zero=seq_mask_zero)
    
    # embedding_lookup函数是用来从Embedding层中获取对应的结果，就是将对应特征的Input层输入到Embedding层中去
    # 返回的仍然是一个dict, 此时返回的内容中，embedding层和input层已经连接到一起了，并且还将同一组的id类特征
    # 放到了一个列表中，方便同组id类特征的处理
    group_sparse_embedding_dict = embedding_lookup(embedding_matrix_dict, input_features, sparse_feature_columns)
    
    # 将id序列的embedding与对应的Input层进行关联
    sequence_embed_dict = varlen_embedding_lookup(embedding_matrix_dict, input_features, varlen_sparse_feature_columns)
    # 将id序列embedding进行池化操作，返回一个池化后的向量列表
    group_varlen_sparse_embedding_dict = get_varlen_pooling_list(sequence_embed_dict, input_features,
                                                                 varlen_sparse_feature_columns)
    # 将字典中的所有层都进行合并
    group_embedding_dict = mergeDict(group_sparse_embedding_dict, group_varlen_sparse_embedding_dict)

    # 获取dense类特征的所有Input层，在这里可以做一些dense特征的数学变换
    # 最终返回的是一个Input层的列表 
    dense_value_list = get_dense_input(input_features, feature_columns)

    if not support_dense and len(dense_value_list) &gt; 0:
        raise ValueError(&quot;DenseFeat is not supported in dnn_feature_columns&quot;)
    # 如果当前特征处理过程中没有用到分组的功能的话，就直接将字典中的所有层都转换成一个列表返回
    if not support_group:
        group_embedding_dict = list(chain.from_iterable(group_embedding_dict.values()))
    # group_embedding_dict代表的是一个字典或者一个列表，这取决于当前特征是否支持分组
    return group_embedding_dict, dense_value_list
</code></pre>
<p>其中，<code>create_embedding_matrix</code>函数的实现逻辑：</p>
<ol>
<li>首先将id类特征和id序列类特征分成两个列表；</li>
<li>然后通过<code>create_embedding_matrix</code>方法构造Embedding层:
<ul>
<li>遍历所有的id类特征和id序列类特征；</li>
<li>根据每个id类特征(即对每个特征都要创建一个Embedding层)的标记定义对应Embeddng层的词典大小，向量维度，初始化方法，正则化参数，Embedding层的名字等；</li>
<li>将构造完的Embedding层通过字典的形式返回，key是特征名字，value是特征对应的Embedding层；</li>
<li>对于id类特征和id序列类特征，在构造Embedding层的时候，唯一的区别是：id序列类特征创建Embedding的时候多了一个参数<code>mask_zero=True</code>。</li>
</ul>
</li>
</ol>
<pre><code class="language-py">def create_embedding_matrix(feature_columns, l2_reg, seed, prefix=&quot;&quot;, seq_mask_zero=True):
    from . import feature_column as fc_lib
    # 将feature_cloumns中的sparsefeat 和 varlen_sparsefeat 特征分开，方便分开创建Embedding层
    sparse_feature_columns = list(
        filter(lambda x: isinstance(x, fc_lib.SparseFeat), feature_columns)) if feature_columns else []
    varlen_sparse_feature_columns = list(
        filter(lambda x: isinstance(x, fc_lib.VarLenSparseFeat), feature_columns)) if feature_columns else []
    
    # 创建Embedding层的字典
    sparse_emb_dict = create_embedding_dict(sparse_feature_columns, varlen_sparse_feature_columns, seed,
                                            l2_reg, prefix=prefix + 'sparse', seq_mask_zero=seq_mask_zero)
    return sparse_emb_dict
 
# 其中create_embedding_dict逻辑如下
def create_embedding_dict(sparse_feature_columns, varlen_sparse_feature_columns, seed, l2_reg,
                          prefix='sparse_', seq_mask_zero=True):
    sparse_embedding = {}
    for feat in sparse_feature_columns:
        emb = Embedding(feat.vocabulary_size, feat.embedding_dim,
                        embeddings_initializer=feat.embeddings_initializer,
                        embeddings_regularizer=l2(l2_reg),
                        name=prefix + '_emb_' + feat.embedding_name)
        emb.trainable = feat.trainable
        sparse_embedding[feat.embedding_name] = emb

    # 对于id序列和id特征的Embedding层只有一个参数是不一样的，那就是mask_zero的设置，如果设置为True,
    # 表示的是取出来的是一个embedding序列，如果长度不够最大长度的用0填充
    if varlen_sparse_feature_columns and len(varlen_sparse_feature_columns) &gt; 0:
        for feat in varlen_sparse_feature_columns:
            # if feat.name not in sparse_embedding:
            emb = Embedding(feat.vocabulary_size, feat.embedding_dim,
                            embeddings_initializer=feat.embeddings_initializer,
                            embeddings_regularizer=l2(
                                l2_reg),
                            name=prefix + '_seq_emb_' + feat.name,
                            mask_zero=seq_mask_zero)
            emb.trainable = feat.trainable
            sparse_embedding[feat.embedding_name] = emb
    return sparse_embedding
</code></pre>
<p>通过<code>create_embedding_dict</code>方法构造Embedding层：</p>
<pre><code class="language-py">group_sparse_embedding_dict = embedding_lookup(embedding_matrix_dict, input_features, sparse_feature_columns)
</code></pre>
<pre><code class="language-py">def embedding_lookup(sparse_embedding_dict, sparse_input_dict, sparse_feature_columns, return_feat_list=(),
                     mask_feat_list=(), to_list=False):
    # 定义个字典，字典中value默认是一个list，这么做是为了将id类特征进行分组，同一个组的id特征都会在一个列表中，
    # 方便后面同组的特征做处理
    group_embedding_dict = defaultdict(list)
    for fc in sparse_feature_columns:
        feature_name = fc.name
        embedding_name = fc.embedding_name
        if (len(return_feat_list) == 0 or feature_name in return_feat_list):
            # 判断当前特征是否需要被哈希，如果需要的话，就将Input层输入到Hash层，得到输出
            if fc.use_hash:
                lookup_idx = Hash(fc.vocabulary_size, mask_zero=(feature_name in mask_feat_list), vocabulary_path=fc.vocabulary_path)(
                    sparse_input_dict[feature_name])
            else:
                # 否则直接取出当前特征的Input层
                lookup_idx = sparse_input_dict[feature_name]

            group_embedding_dict[fc.group_name].append(sparse_embedding_dict[embedding_name](lookup_idx))
    # 如果最后想返回一个列表的话，需要将字典中不同组的embedding都拆开拼接到一个list中
    if to_list:
        return list(chain.from_iterable(group_embedding_dict.values()))
    return group_embedding_dict
</code></pre>
<p>对于id序列特征而言，和id类特征是类似的，也是先定义Embedding层然后将对应的Input层输入进来。只不过id序列类特征可能会多一步序列聚合的操作。</p>
<p>从input_from_feature_columns方法中我们看到，除了对id类特征进行了一些处理之外，还有对DenseFeat有简单的处理，这里就简单说一下DenseFeat和SparseFeat在输入到DNN之前需要应该做的事情：</p>
<ol>
<li>DenseFeat，只需要将每个特征根据提前设置好的特征标记参数，构建好对应的Input层，然就就可以将这些Input层拼起来输入到DNN层里面去了，所以不需要做太多的其他处理；</li>
<li>SparseFeat，需要将每个特征根据提前设置好的特征标记参数，构建好对应的Input层以及Embedding层，然后将每个特征的Input层输入到Embedding层，这样输入的一个id索引，就可以得到对应的embedding向量了，得到了id特征的embedding向量，就可以经过DNN层或者各类特征交叉层了；</li>
<li>VarLenSparseFeat，与SparseFeat类似，但是有一点区别。也是先得到对应的Input、Embedding层，然后将Input层输入到Embedding层，此时得到的就不是一个向量了，而是一个向量序列（维度：batch_size x seq_len x embedding_dim），有时候会将这个向量序列做简单的池化操作，例如mean pooling，得到一个聚合后的向量特征。此外，有时候还可以使用序列模型，例如LSTM将序列输入到LSTM模块中，得到一个新的序列，再进行聚合。</li>
</ol>
<p>通过上述的介绍，其实特征处理部分的逻辑基本上就做完了，后面就是将上述得到的Input层，或者Embedding层输出的embedding向量，输入到DNN，特征交叉等模块中进一步构造模型。</p>
<h2 id="模型构建">模型构建</h2>
<p>(待补充)</p>
<h2 id="re">RE：</h2>
<ol>
<li>https://deepctr-doc.readthedocs.io/en/latest/index.html</li>
<li>https://zhuanlan.zhihu.com/p/514763115</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【Pytorch】使用笔记]]></title>
        <id>https://cactusii.github.io/post/pytorch-ying-yong/</id>
        <link href="https://cactusii.github.io/post/pytorch-ying-yong/">
        </link>
        <updated>2022-07-11T15:43:52.000Z</updated>
        <content type="html"><![CDATA[<h3 id="1-pytorch环境">1. Pytorch环境</h3>
<p>Pytorch的官方教程很详细，https://pytorch.org/，直接按照自己的环境安装对应的环境即可。</p>
<figure data-type="image" tabindex="1"><img src="https://cactusii.github.io//post-images/1657554478602.png" alt="" loading="lazy"></figure>
<p>安装GPU版本的需要安装CUDA，https://developer.nvidia.cn/cuda-toolkit-archive这里可以下载以前的版本，不要装最新的，因为pytorch可能还没有对应的最新的版本。</p>
<h3 id="2-tensor">2. tensor</h3>
<h4 id="21-pytorch的数据类型">2.1 Pytorch的数据类型</h4>
<figure data-type="image" tabindex="2"><img src="https://cactusii.github.io//post-images/1657554502592.png" alt="" loading="lazy"></figure>
<p>常用的是FloatTensor、IntTensor、ByteTensor，注意CPU上的数据类型和GPU上的数据类型是不一样的。</p>
<p>在程序中检查数据的类型时一般用<code>isinstance(a, torch.FloatTensor)</code>。</p>
<p><strong>1.dim=0（标量）</strong></p>
<p>Dimension=0/rank=0，维度为0，也就是一个标量，一般loss的值是一个标量tensor</p>
<pre><code class="language-python">a = torch.tensor(1.)
a.dim() # 0
a.shape # torch.Size([])
</code></pre>
<p><strong>2.dim=1（张量）</strong></p>
<p>Dimension=1/rank=1，一维的向量，一般神经元的偏执为一个dim=1，size=1的tensor，例如<code>bias = tensor([1])</code></p>
<pre><code class="language-python">b = torch.tensor([1.1]) # tensor([1.100])
b = torch.tensor([1.1, 2.2]) # tensor(1.100, 2.200)
c = torch.FloatTensor(1) # tensor([3.2239e-25])随机值
c = torch.FloatTensor(2) # tensor([x, x])随机值
d = torch.ones(2)
d.shape # torch.Size([2])
</code></pre>
<p><strong>一般dim指的是维度，例如一个矩阵的dim就是2，而size就是shape，例如[2,2]。</strong></p>
<p><strong>3.dim=2</strong></p>
<pre><code class="language-python">e = torch.randn(2,3)
e.shape # torch.Size([2,3])
e.shape(1) # 2
e.shape(2) # 3
e.shape[1] # 3
e.shape[0] # 2
</code></pre>
<p><strong>4.dim=3</strong></p>
<p>一般用来表示RNN input，例如每次送入5句话，即batch=5，每句话有10个单词，每个单词用100size的向量表示，那size = [10,5,100]（一般习惯将batch放在第二维）。</p>
<pre><code class="language-python">f = torch.rand(1,2,3)
f.shape # torch.Size([1,2,3])
</code></pre>
<p><strong>5.dim=4</strong></p>
<p>四维适合卷积神经网络，图片的存储，[b,c,h,w]，即batch，channel，height，width</p>
<pre><code class="language-python">g = torch.rand(2,3,28,28)
g.numel() # 4704，整个维度的元素的个数，即2*3*28*28
</code></pre>
<h4 id="22-创建tensor">2.2 创建Tensor</h4>
<p>一个tensor通常包含一下几个常用属性：</p>
<ul>
<li>
<p>dtype，常见的有：</p>
<table>
<thead>
<tr>
<th>Data type</th>
<th>dtype</th>
<th>CPU tensor</th>
<th>GPU tensor</th>
</tr>
</thead>
<tbody>
<tr>
<td>32-bit floating point</td>
<td><code>torch.float32</code> or <code>torch.float</code></td>
<td><code>torch.FloatTensor</code></td>
<td><code>torch.cuda.FloatTensor</code></td>
</tr>
<tr>
<td>64-bit floating point</td>
<td><code>torch.float64</code> or <code>torch.double</code></td>
<td><code>torch.DoubleTensor</code></td>
<td><code>torch.cuda.DoubleTensor</code></td>
</tr>
<tr>
<td>32-bit integer (signed)</td>
<td><code>torch.int32</code> or <code>torch.int</code></td>
<td><code>torch.IntTensor</code></td>
<td><code>torch.cuda.IntTensor</code></td>
</tr>
<tr>
<td>64-bit integer (signed)</td>
<td><code>torch.int64</code> or <code>torch.long</code></td>
<td><code>torch.LongTensor</code></td>
<td><code>torch.cuda.LongTensor</code></td>
</tr>
</tbody>
</table>
<p>通过<code>torch.ser_default_tensor_type(torch.FloatTensor)</code>修改默认的类型。</p>
<p>CPU与GPU类型的相互转换：</p>
<pre><code class="language-python">&gt;&gt;&gt; torch.zeros([2, 4], dtype=torch.int32)
tensor([[ 0,  0,  0,  0],
        [ 0,  0,  0,  0]], dtype=torch.int32)
&gt;&gt;&gt; cuda0 = torch.device('cuda:0')
&gt;&gt;&gt; torch.ones([2, 4], dtype=torch.float64, device=cuda0)
tensor([[ 1.0000,  1.0000,  1.0000,  1.0000],
        [ 1.0000,  1.0000,  1.0000,  1.0000]], dtype=torch.float64, device='cuda:0')
# 从cpu –&gt; gpu，使用data.cuda()即可。
# 若从gpu –&gt; cpu，则使用data.cpu()。
</code></pre>
</li>
<li>
<p>requires_grad=Flase，可以先理解成在自动求梯度的过程中，对于该属性为False的tensor不会进行求解梯度。</p>
</li>
<li>
<p>.shape属性，返回数据的尺寸</p>
</li>
</ul>
<p>如何创建一个tensor，主要有一下几种方法：</p>
<ol>
<li>
<p>从其它类型转换</p>
<pre><code class="language-python">torch.from_numpy(np.array(2, 3.3))
# 从numpy转换 -&gt; tensor([2.000, 3.300], dtype=torch.float64)

torch.tensor([2., 3.2]) 
# 从list转换，类型默认是torch.FloatTensor，可以通过torch.ser_default_tensor_type(torch.FloatTensor)修改默认类型
torch.tensor([2., 3.2], dtype=torch.float64)
# 或者创建时指定
</code></pre>
</li>
<li>
<p>未初始化Tensor</p>
<p>生成未初始化的数据，数据分布十分不规律，后续一定要覆盖掉。例如Torch.FloatTensor(d1,d2,d3)。</p>
<blockquote>
<p>注意<code>torch.Tensor()/torch.FloatTensor()</code>接收的参数是shape维度，也可以接收现有的数据但必须是list，而<code>torch.tensor()</code>只接收现有的数据，建议用<code>torch.tensor()</code>用现有的数据创建，用<code>torch.Tensor()</code>接收shape创建。</p>
</blockquote>
</li>
<li>
<p>随机初始化Tensor</p>
<pre><code class="language-python">a = torch.rand(3,3) # 3x3矩阵，每个都在[0,1]之间

torch.rand_like(a) # 会将参数a的shape送给rand函数

torch.randint(1,10,[3,3]) #min, max, shape

torch.empty(7, 19) # 创建7x19的矩阵

torch.randn(3, 3) # 3x3的矩阵，每个数据都符合N(0,1)的正态分布

torch.normal() # ?

torch.full([2,3],0) # 2x3的元素全部为0
</code></pre>
</li>
</ol>
<h4 id="23-tensor常用方法">2.3 tensor常用方法</h4>
<pre><code class="language-python">torch.reshape(input, (1, 2, 3, 4)) # 转换为四维
</code></pre>
<h3 id="3-梯度">3. 梯度</h3>
<p>导数和偏微分只能是描述的函数在自变量方向上的变化的情况，是一个标量；而梯度定义为一个向量，向量的每个元素是对不同的自变量的偏微分：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∇</mi><mi>f</mi><mo>=</mo><mo>(</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>f</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>x</mi><mn>1</mn></msub></mrow></mfrac><mo separator="true">;</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>f</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>x</mi><mn>2</mn></msub></mrow></mfrac><mo separator="true">;</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">;</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>f</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>x</mi><mi>n</mi></msub></mrow></mfrac><mo>)</mo></mrow><annotation encoding="application/x-tex">\nabla f = (\frac{\partial f}{\partial x_1}; \frac{\partial f}{\partial x_2}; ...; \frac{\partial f}{\partial x_n})
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">∇</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.20744em;vertical-align:-0.8360000000000001em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714399999999998em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714399999999998em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714399999999998em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span></span></p>
<p>一般我们需要用梯度函数的极值点，通常是是极小值，用到的公式就是：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><msub><mi>θ</mi><mi>t</mi></msub><mo>−</mo><msub><mi>α</mi><mi>t</mi></msub><mi mathvariant="normal">∇</mi><mi>f</mi><mo>(</mo><msub><mi>θ</mi><mi>t</mi></msub><mo>)</mo></mrow><annotation encoding="application/x-tex">\theta_{t+1} = \theta_t - \alpha_t\nabla f(\theta_t)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.902771em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∇</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<p>示例：</p>
<p>例如求一个函数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>J</mi><mo>(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo>)</mo><mo>=</mo><msubsup><mi>x</mi><mn>1</mn><mn>2</mn></msubsup><mo>+</mo><msubsup><mi>x</mi><mn>2</mn><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">J(x_1, x_2) = x_1^2 + x_2^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0622159999999998em;vertical-align:-0.24810799999999997em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0622159999999998em;vertical-align:-0.24810799999999997em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span></span></span></span>的极小值，即目标为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mi>i</mi><mi>n</mi><mi>J</mi><mo>(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo>)</mo></mrow><annotation encoding="application/x-tex">minJ(x_1,x_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo>=</mo><msub><mi>x</mi><mn>1</mn></msub><mo>−</mo><mi>α</mi><mfrac><mi>d</mi><mrow><mi>d</mi><msub><mi>x</mi><mn>1</mn></msub></mrow></mfrac><mi>J</mi><mo>(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo>)</mo><mo>=</mo><msub><mi>x</mi><mn>1</mn></msub><mo>−</mo><mn>2</mn><mi>α</mi><msub><mi>x</mi><mn>1</mn></msub><mspace linebreak="newline"></mspace><msub><mi>x</mi><mn>1</mn></msub><mo>=</mo><msub><mi>x</mi><mn>1</mn></msub><mo>−</mo><mi>α</mi><mfrac><mi>d</mi><mrow><mi>d</mi><msub><mi>x</mi><mn>2</mn></msub></mrow></mfrac><mi>J</mi><mo>(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo>)</mo><mo>=</mo><msub><mi>x</mi><mn>1</mn></msub><mo>−</mo><mn>2</mn><mi>α</mi><msub><mi>x</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">x_1 = x_1 - \alpha \frac{d}{dx_1}J(x_1,x_2)=x_1-2\alpha x_1 \\
x_1 = x_1 - \alpha \frac{d}{dx_2}J(x_1,x_2)=x_1-2\alpha x_2
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.20744em;vertical-align:-0.8360000000000001em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.79444em;vertical-align:-0.15em;"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.20744em;vertical-align:-0.8360000000000001em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.79444em;vertical-align:-0.15em;"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>比局部最小值更可怕的问题是鞍点的情况，比如一个二维的函数，很可能出现一种情况，就是某个点是其中一个维度的极小值，但却是另一个维度的极大值。那么对于多维的函数来说这种情况是很常见的 。</p>
<h4 id="31-影响优化器的性能的因素">3.1 影响优化器的性能的因素</h4>
<ol>
<li>
<p>初始化状态</p>
</li>
<li>
<p>学习率</p>
</li>
<li>
<p>逃离局部最小值的方法</p>
<p>给出一个惯性，也就是当找到极小值点的时候根据惯性继续向前，有可能会逃离出极小值点</p>
</li>
</ol>
<h3 id="4-激活函数">4. 激活函数</h3>
<p>为了将线性函数转换为非线性函数和方便求导，通常要在神经元的末尾加上激活函数。</p>
<h4 id="41-sigmoid">4.1 sigmoid</h4>
<p>sigmoid会将值压缩到(0,1)区间，同时导数非常容易求解：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>σ</mi><mo mathvariant="normal">′</mo></msup><mo>=</mo><mi>σ</mi><mo>(</mo><mn>1</mn><mo>−</mo><mi>σ</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">\sigma&#x27; = \sigma(1-\sigma)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.801892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mclose">)</span></span></span></span></span></p>
<figure data-type="image" tabindex="3"><img src="https://cactusii.github.io//post-images/1657554534332.png" alt="" loading="lazy"></figure>
<pre><code class="language-python">torch.sigmoid()
</code></pre>
<h4 id="42-tanh">4.2 tanh</h4>
<p>tanh是由sigmoid变换而来的，导数：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mi>a</mi><mi>n</mi><msup><mi>h</mi><mo mathvariant="normal">′</mo></msup><mo>=</mo><mn>1</mn><mo>−</mo><mi>t</mi><mi>a</mi><mi>n</mi><msup><mi>h</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">tanh&#x27; = 1-tanh^2
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.801892em;vertical-align:0em;"></span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p>
<figure data-type="image" tabindex="4"><img src="https://cactusii.github.io//post-images/1657554544273.png" alt="" loading="lazy"></figure>
<pre><code class="language-python">torch.tanh()
</code></pre>
<h4 id="43-relu">4.3 ReLU</h4>
<p>ReLU是非常适合现在深度学习的，导数计算起来非常简单，当x&lt;0时，梯度=0，当x&gt;0时，梯度=1，不会出现放大和缩小的情况，很难出现梯度弥散和梯度保障的情况</p>
<figure data-type="image" tabindex="5"><img src="https://cactusii.github.io//post-images/1657554553797.png" alt="" loading="lazy"></figure>
<pre><code class="language-python">torch.relu()
</code></pre>
<p>优先使用ReLU函数。</p>
<pre><code class="language-python">import torch
import torch.nn.functional as F
from torch.autograd import Variable

x = torch.linspace(-5, 5, 200)
x = Variable(x)

x_np = x.data.numpy()

y_relu = F.relu(x).data.numpy()
y_sigmoid = F.sigmoid(x).data.numpy()
y_tanh = F.tanh(x).data.numpy()
y_softplus = F.softplus(x).data.numpy()

import matplotlib.pyplot as plt  # python 的可视化模块, 我有教程 (https://mofanpy.com/tutorials/data-manipulation/plt/)

plt.figure(1, figsize=(8, 6))
plt.subplot(221)
plt.plot(x_np, y_relu, c='red', label='relu')
plt.ylim((-1, 5))
plt.legend(loc='best')

plt.subplot(222)
plt.plot(x_np, y_sigmoid, c='red', label='sigmoid')
plt.ylim((-0.2, 1.2))
plt.legend(loc='best')

plt.subplot(223)
plt.plot(x_np, y_tanh, c='red', label='tanh')
plt.ylim((-1.2, 1.2))
plt.legend(loc='best')

plt.subplot(224)
plt.plot(x_np, y_softplus, c='red', label='softplus')
plt.ylim((-0.2, 6))
plt.legend(loc='best')

plt.show()
</code></pre>
<figure data-type="image" tabindex="6"><img src="https://cactusii.github.io//post-images/1657554565183.png" alt="" loading="lazy"></figure>
<h3 id="5-损失函数loss">5. 损失函数Loss</h3>
<p>损失函数分为两大类：</p>
<ol>
<li>
<p>Mean Squared Error均方差</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mi>S</mi><mi>E</mi><mo>=</mo><mo>∑</mo><mo>(</mo><mi>y</mi><mo>−</mo><mover accent="true"><mi>y</mi><mo>ˉ</mo></mover><msup><mo>)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">MSE = \sum(y-\bar y)^2
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.6000100000000002em;vertical-align:-0.55001em;"></span><span class="mop op-symbol large-op" style="position:relative;top:-0.000004999999999977245em;">∑</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.56778em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">ˉ</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p>
</li>
<li>
<p>Cross Entropy Loss</p>
<p>Entropy熵，熵越高，不确定性uncertainty越小，也就是越稳定的状态。</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mi>n</mi><mi>t</mi><mi>r</mi><mi>o</mi><mi>p</mi><mi>y</mi><mo>=</mo><mo>−</mo><mo>∑</mo><mi>p</mi><mo>(</mo><mi>x</mi><mo>)</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>p</mi><mo>(</mo><mi>x</mi><mo>)</mo><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">Entropy = -\sum p(x)log p(x) \\
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.6000100000000002em;vertical-align:-0.55001em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol large-op" style="position:relative;top:-0.000004999999999977245em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span><span class="mspace newline"></span></span></span></span></p>
<p>交叉熵就是两个不同的分布，定义为：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mi>r</mi><mi>o</mi><mi>s</mi><mi>s</mi><mtext> </mtext><mi>E</mi><mi>n</mi><mi>t</mi><mi>r</mi><mi>o</mi><mi>p</mi><mi>y</mi><mo>=</mo><mi>H</mi><mo>(</mo><mi>p</mi><mo separator="true">,</mo><mi>q</mi><mo>)</mo><mo>=</mo><mo>−</mo><mo>∑</mo><mi>p</mi><mo>(</mo><mi>x</mi><mo>)</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>q</mi><mo>(</mo><mi>x</mi><mo>)</mo><mspace linebreak="newline"></mspace><mo>=</mo><mi>H</mi><mo>(</mo><mi>p</mi><mo>)</mo><mo>+</mo><msub><mi>D</mi><mrow><mi>K</mi><mi>L</mi></mrow></msub><mo>(</mo><mi>p</mi><mi mathvariant="normal">∣</mi><mi>q</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">Cross \space Entropy = H(p,q) = - \sum p(x)logq(x) \\
 = H(p) + D_{KL}(p|q)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord mathdefault">s</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.6000100000000002em;vertical-align:-0.55001em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol large-op" style="position:relative;top:-0.000004999999999977245em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose">)</span></span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mrow><mi>K</mi><mi>L</mi></mrow></msub><mo>(</mo><mi>p</mi><mi mathvariant="normal">∣</mi><mi>q</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">D_{KL}(p|q)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose">)</span></span></span></span>定义为散度，当两个分布重合的部分越低，也就是越不相似，其值越高，反之越低。</p>
<p>在分类的问题当中，通常采用one-hot编码，这种编码的Entropy为0，带入到Cross Entropy中：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mi>r</mi><mi>o</mi><mi>s</mi><mi>s</mi><mtext> </mtext><mi>E</mi><mi>n</mi><mi>t</mi><mi>r</mi><mi>o</mi><mi>p</mi><mi>y</mi><mo>=</mo><msub><mi>D</mi><mrow><mi>K</mi><mi>L</mi></mrow></msub><mo>(</mo><mi>p</mi><mi mathvariant="normal">∣</mi><mi>q</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">Cross \space Entropy = D_{KL}(p|q)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord mathdefault">s</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose">)</span></span></span></span></span></p>
<p>恰好是两个分布的散度，我们可以将其作为优化目标，也就是模型的预测分布和真实分布之间的散度，最小化该散度，也就是最小化两个分布之间的差距。</p>
<p>可以求二分类和多分类问题的损失值，搭配softmax激活函数效果会更好。</p>
<ul>
<li>binary</li>
<li>multi-class</li>
<li>softmax</li>
</ul>
</li>
</ol>
<h4 id="51-loss梯度">5.1 Loss梯度</h4>
<p>由于模型的目标是将loss降到最低，因此需要找到loss的最小值，那么通过对loss求导的方式寻找。</p>
<p>Loss的梯度求解有两种方法</p>
<ol>
<li>
<p>torch.autograd.grad(loss, [w1, w2, ...])</p>
<p>用最后的loss对参数[w1, w1, ...]进行求偏导，返回一个导数值的列表</p>
</li>
<li>
<p>loss.backward()</p>
<p>这种方法是求解梯度并进行反向传播，也就是说该方法完成了梯度的求解过程以及反向传播的过程</p>
</li>
</ol>
<p>示例：</p>
<pre><code class="language-python"># MSE均方误差
x = torch.ones(1)
w = torch.full([1],2)  # y = wx
mse = F.mse_loss(torch.ones(1), x*w)
# 计算loss的梯度
torch.autograd.grad(mse, [w])  # 第一个参数是loss，第二个参数是所有网络参数

# 或者loss对象可以直接调用backward()
mse.backward()

&quot;&quot;&quot;
CEL
&quot;&quot;&quot;
a = torch.rand(3)
p = F.softmax(a, dim=0)
p.backward()
</code></pre>
<h3 id="6-优化算法">6. 优化算法</h3>
<pre><code class="language-python">x = torch.tensor([0, 0], requires_grad=True)
optimizer = torch.optim.Adam([x], lr=1e-3)  # 创建优化器对象，传入的是待优化的参数和学习率

for step in range(20000):
    pred = f(x)
    
    optimizer.zero_grad()
    pred.backward()  # 就会生成相应的梯度信息
    optimizer.step()  # 每次调用一次step函数就会更新一次x' = x - lr*dx, y' = y - lr*dy...
</code></pre>
<h3 id="7-datasetdataloader">7. Dataset/DataLoader</h3>
<h4 id="71-dataset">7.1 Dataset</h4>
<h4 id="72-dataloader">7.2 DataLoader</h4>
<pre><code class="language-python">torch.utils.data.DataLoader()

# 常用参数
- dataset
- batch_size
- shuffle 顺序打乱，默认为False
- num_workers 加载数据的线程数量，默认为0，主线程加载

dataloader = DataLoader(dataset, 64, shuffle=True)
for batch_data, targets in dataloader:
    ...
</code></pre>
<h3 id="8-nnlinear">8. nn.Linear()</h3>
<figure data-type="image" tabindex="7"><img src="https://cactusii.github.io//post-images/1657554574378.png" alt="" loading="lazy"></figure>
<h3 id="8-nnmodule模块">8. nn.Module模块</h3>
<p>当自己需要实现一个网络模型的时候需要继承这个类，在内部定义的每一个层次也是nn.Module类，所以它们之间有嵌套关系。</p>
<ul>
<li>Every Layer is nn.Module</li>
<li>nn.Module nested in nn.Module</li>
</ul>
<p>继承nn.Module类后，需要在<code>__init__(self)</code>函数中定义自己网络的所有层结构，然后在<code>forward(self)</code>函数中串联每个层。</p>
<h4 id="81-容器container">8.1 容器container</h4>
<p>如果层次非常多的话，可以将所有层次都定义在<code>nn.Sequential()</code>中：</p>
<pre><code class="language-python">self.net = nn.Sequential(
	nn.Conv2d(1, 32, 5, 1, 1),
    nn.MaxPool(2, 2),
    nn.ReLU(True),
    nn.BatchNorm2d(32),
    
    nn.Conv2d(32, 64, 3, 1, 1),
    nn.ReLU(True),
    nn.BatchNorm2d(64),
    
    ...
    # 这其中可以用自己的定义的其它网络
)
# 注意Squential接受的参数都是class
</code></pre>
<p>这种方式就不需要为每个层定义一个变量，也不需要为每个其进行forward串联。</p>
<h4 id="82-参数管理">8.2 参数管理</h4>
<p>nn.Module会对网络中的参数进行管理，<code>net.parameters()</code>会返回所有网络中的参数，通常使用这种方法将所有参数传到优化器中去。</p>
<p><strong>示例</strong></p>
<pre><code class="language-python">class BasicNet(nn.Module):
    def __init__(self):
        super(BasicNet, self).__init__()
        self.net = nn.Linear(4, 3)
    
    def forward(self, x):
        return self.net(x)
    
class Net(nn.Module):
    def __init__(self):
        super(Net, self).__init__()
        self.net = nn.Sequential(
        	BasicNet(),
            nn.ReLU(),
            nn.Linear(3,2)
        )
    
    def forward(self, x):
        return self.net(x)
    
device = torch.device('cuda')
net = Net()
net.to(device)
</code></pre>
<p><strong>save/load</strong></p>
<pre><code class="language-python">net.load_state_dict(torch.load('ckpt.mdl'))
# train...

torch.save(net.stat_dict(), 'ckpt.mdl')
</code></pre>
<p><strong>train/test</strong></p>
<p>对于dropout等有的层结构来说，train和test的状态是不太一样的，nn.Module提供了状态切换的方法。</p>
<pre><code class="language-python">net.train()  # train
net.eval()  # test
</code></pre>
<hr>
<h3 id="9-pytorch神经网络结构">9. PyTorch神经网络结构</h3>
<p>神经网络可以通过torch.nn包来构建。神经网络是基于自动梯度来定义一些模型，一个nn.Module包括层和一个forwoard(input)方法，返回为output。</p>
<p>例如一个前馈神经网络，它接受输入，让输入一个接着一个的通过一些层，最后给出输出。</p>
<p>一个典型的神经网络训练过程包括：</p>
<ol>
<li>
<p>定义一个包含可训练参数的神经网络</p>
</li>
<li>
<p>迭代整个输入</p>
</li>
<li>
<p>通过神经网络处理输入</p>
</li>
<li>
<p>计算损失</p>
</li>
<li>
<p>反向传播梯度到神经网络的参数</p>
</li>
<li>
<p>更新网络参数，典型的用一个简单的更新方法：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi><mi>e</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi><mo>=</mo><mi>w</mi><mi>e</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi><mo>−</mo><mi>l</mi><mi>e</mi><mi>a</mi><mi>r</mi><mi>n</mi><mi>i</mi><mi>n</mi><mi>g</mi><mi mathvariant="normal">_</mi><mi>r</mi><mi>a</mi><mi>t</mi><mi>e</mi><mo>∗</mo><mi>g</mi><mi>r</mi><mi>a</mi><mi>d</mi><mi>i</mi><mi>e</mi><mi>n</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">weight = weight - learning\_rate * gradient
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">e</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">h</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">e</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">h</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.00444em;vertical-align:-0.31em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">n</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mord mathdefault">i</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span></span></span></span></span></p>
</li>
</ol>
<h4 id="91-定义神经网络">9.1 定义神经网络</h4>
<p>定义神经网络的结构：</p>
<pre><code class="language-python">import torch
import torch.nn as nn
import torch.nn.functional as F


class Net(nn.Module):

    def __init__(self):
        super(Net, self).__init__()
        # 1 input image channel, 6 output channels, 5x5 square convolution
        # kernel
        self.conv1 = nn.Conv2d(1, 6, 5)
        self.conv2 = nn.Conv2d(6, 16, 5)
        # an affine operation: y = Wx + b
        self.fc1 = nn.Linear(16 * 5 * 5, 120)
        self.fc2 = nn.Linear(120, 84)
        self.fc3 = nn.Linear(84, 10)

    def forward(self, x):
        # Max pooling over a (2, 2) window
        x = F.max_pool2d(F.relu(self.conv1(x)), (2, 2))
        # If the size is a square you can only specify a single number
        x = F.max_pool2d(F.relu(self.conv2(x)), 2)
        x = x.view(-1, self.num_flat_features(x))
        x = F.relu(self.fc1(x))
        x = F.relu(self.fc2(x))
        x = self.fc3(x)
        return x

    def num_flat_features(self, x):
        size = x.size()[1:]  # all dimensions except the batch dimension
        num_features = 1
        for s in size:
            num_features *= s
        return num_features


net = Net()
print(net)

'''
Net(
  (conv1): Conv2d(1, 6, kernel_size=(5, 5), stride=(1, 1))
  (conv2): Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))
  (fc1): Linear(in_features=400, out_features=120, bias=True)
  (fc2): Linear(in_features=120, out_features=84, bias=True)
  (fc3): Linear(in_features=84, out_features=10, bias=True)
)
'''
</code></pre>
<p>这是一个前馈网络，然后反向传播函数默认被autograd(自动梯度)定义了。</p>
<p>一个模型的可训练的参数可以通过调用<code>net.parameters()</code>返回：</p>
<pre><code class="language-python">params = list(net.parameters())
print(len(params))
print(params[0].size())

'''
10
torch.Size([6,1,5,5])
'''
</code></pre>
<h4 id="92-处理输入">9.2 处理输入</h4>
<p>接着将输入放到网络中，将得到的计算结果调用反向传播：</p>
<pre><code class="language-python">input = torch.randn(1, 1, 32, 32)
out = net(input)
print(out)

'''
tensor([[-0.0233,  0.0159, -0.0249,  0.1413,  0.0663,  0.0297, -0.0940, -0.0135,
          0.1003, -0.0559]], grad_fn=&lt;AddmmBackward&gt;)
'''
</code></pre>
<h4 id="93-调用反向传播">9.3 调用反向传播</h4>
<p>然后把所有参数梯度缓存器置零，用随机的梯度来反向传播</p>
<pre><code class="language-python">net.zero_grad()
out.backward(torch.randn(1, 10))
</code></pre>
<p>至此，完成了定义一个神经网络，处理出入以及调用反向传播。</p>
<p>下面还需要处理：</p>
<ul>
<li>计算损失值</li>
<li>更新网络中的权重</li>
</ul>
<h4 id="94-计算损失值">9.4 计算损失值</h4>
<p>损失函数需要一对输入，即模型的输出和真实目标，然后返回一个值表示估计值与真实目标的距离。</p>
<p>在nn包中定义了多种损失函数，比如一个简单的损失函数是<code>nn.MSELoss</code>，这是个计算均方误差的损失函数。</p>
<p>例如：</p>
<pre><code class="language-python">output = net(input)
target = torch.randn(10)
target = target.view(1, -1)
criterion = nn.MSELoss()

loss = criterion(output, target)
print(loss)

'''
tensor(1.3389, grad_fn=&lt;MseLossBackWard&gt;)
'''
</code></pre>
<h4 id="95-将损失添加到反向传播">9.5 将损失添加到反向传播</h4>
<p>现在需要跟随损失到反向传播路径，可以使用它的<code>.grad_fn</code>属性，其计算图为：</p>
<pre><code>input -&gt; conv2d -&gt; relu -&gt; maxpool2d -&gt; conv2d -&gt; relu -&gt; maxpool2d -&gt; view -&gt; linear -&gt; relu -&gt; linear -&gt; relu -&gt; linear -&gt; MSELoss -&gt; loss
</code></pre>
<p>所以，当调用<code>loss.backward()</code>，整个图都会微分，而且所有的在图中的<code>requires_grad=True</code>的张量将会让他们的grad张量累计梯度。</p>
<p>为了实现反向传播损失，所有需要做的事仅仅是使用<code>loss.backward()</code>。需要清空现存的梯度，不然将会和现存的梯度累计到一起。</p>
<pre><code class="language-python">net.zero_grad() # 将现存梯度清零
loss.backward() # 反向传播
</code></pre>
<h4 id="96-更新参数">9.6 更新参数</h4>
<p>最简单的更新规则就是随机梯度下降。</p>
<pre><code class="language-python">weight = weight - learning_rate * gradient
</code></pre>
<p><code>torch.optim</code>包中实现了多种更新规则函数，例如SGD，Nesterov-SGD，Adam，RMSProp等。</p>
<pre><code class="language-python">optimizer = optim.SGD(net.parameters(), lr=0.01) # 创建优化器
optimizer = zero_grad() # 清零梯度系数
output = net(input) # 处理输入
loss = criterion(output, target) # 计算损失
loss.backward() # 反向传播
optimizer.step() # 更新参数
</code></pre>
<h3 id="10-cnn">10. CNN</h3>
<h3 id="11-rnn">11. RNN</h3>
<h4 id="111-模型的参数维度">11.1 模型的参数维度</h4>
<p><strong>单层RNN</strong></p>
<p>对于单层的RNN，也就是每个时刻<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span>的输入<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">x_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和上一时刻<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">t-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69841em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>的隐层状态<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>h</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">h_{t-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.902771em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>经过一个线性层<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>t</mi></msub><mi mathvariant="normal">@</mi><msub><mi>w</mi><mrow><mi>x</mi><mi>h</mi></mrow></msub><mo>+</mo><msub><mi>h</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mi mathvariant="normal">@</mi><msub><mi>w</mi><mrow><mi>h</mi><mi>h</mi></mrow></msub></mrow><annotation encoding="application/x-tex">x_t@w_{xh}+h_{t-1}@w_{hh}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">@</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.902771em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mord">@</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>处理得到下一个时刻的隐层状态<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>h</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">h_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，这种单层的RNN的参数如下图所示：</p>
<figure data-type="image" tabindex="8"><img src="https://cactusii.github.io//post-images/1657554588063.png" alt="" loading="lazy"></figure>
<p>输入<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">x_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的维度为二维<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>[</mo><mi>b</mi><mi>a</mi><mi>t</mi><mi>c</mi><mi>h</mi><mo separator="true">,</mo><mi>f</mi><mi>e</mi><mi>a</mi><mi>t</mi><mi>u</mi><mi>r</mi><mi>e</mi><mtext> </mtext><mi>l</mi><mi>e</mi><mi>n</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">[batch, feature\space len]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathdefault">b</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">c</span><span class="mord mathdefault">h</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">e</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mclose">]</span></span></span></span>，batch和词向量维度feature len，与一个权重矩阵<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>w</mi><mrow><mi>x</mi><mi>h</mi></mrow><mi>T</mi></msubsup></mrow><annotation encoding="application/x-tex">w_{xh}^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1244389999999997em;vertical-align:-0.2831079999999999em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4168920000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight">h</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span></span></span></span>做矩阵运算，权重矩阵<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mrow><mi>x</mi><mi>h</mi></mrow></msub></mrow><annotation encoding="application/x-tex">w_{xh}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的维度为二维<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>[</mo><mi>h</mi><mi>i</mi><mi>d</mi><mi>d</mi><mi>e</mi><mi>n</mi><mtext> </mtext><mi>l</mi><mi>e</mi><mi>n</mi><mo separator="true">,</mo><mi>f</mi><mi>e</mi><mi>a</mi><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi><mtext> </mtext><mi>l</mi><mi>e</mi><mi>n</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">[hidden\space len, featrue\space len]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathdefault">h</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">e</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">u</span><span class="mord mathdefault">e</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mclose">]</span></span></span></span>，hidden len表示隐层向量的维度，矩阵运算完的维度为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>[</mo><mi>b</mi><mi>a</mi><mi>t</mi><mi>c</mi><mi>h</mi><mo separator="true">,</mo><mi>h</mi><mi>i</mi><mi>d</mi><mi>d</mi><mi>e</mi><mi>n</mi><mtext> </mtext><mi>l</mi><mi>e</mi><mi>n</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">[batch, hidden\space len]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathdefault">b</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">c</span><span class="mord mathdefault">h</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">h</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mclose">]</span></span></span></span>。</p>
<p>另一个输入是上一时刻的隐层状态<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>h</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">h_{t-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.902771em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>，它的维度是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>[</mo><mi>b</mi><mi>a</mi><mi>t</mi><mi>c</mi><mi>h</mi><mo separator="true">,</mo><mi>h</mi><mi>i</mi><mi>d</mi><mi>d</mi><mi>e</mi><mi>n</mi><mtext> </mtext><mi>l</mi><mi>e</mi><mi>n</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">[batch, hidden\space len]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathdefault">b</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">c</span><span class="mord mathdefault">h</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">h</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mclose">]</span></span></span></span>，与权重矩阵<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>w</mi><mrow><mi>h</mi><mi>h</mi></mrow><mi>T</mi></msubsup></mrow><annotation encoding="application/x-tex">w_{hh}^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1244389999999997em;vertical-align:-0.2831079999999999em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4168920000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight">h</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span></span></span></span>做矩阵运算，矩阵<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>w</mi><mrow><mi>h</mi><mi>h</mi></mrow><mi>T</mi></msubsup></mrow><annotation encoding="application/x-tex">w_{hh}^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1244389999999997em;vertical-align:-0.2831079999999999em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4168920000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight">h</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span></span></span></span>的维度是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>[</mo><mi>h</mi><mi>i</mi><mi>d</mi><mi>d</mi><mi>e</mi><mi>n</mi><mtext> </mtext><mi>l</mi><mi>e</mi><mi>n</mi><mo separator="true">,</mo><mi>h</mi><mi>i</mi><mi>d</mi><mi>d</mi><mi>e</mi><mi>n</mi><mtext> </mtext><mi>l</mi><mi>e</mi><mi>n</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">[hidden\space len,hidden\space len]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathdefault">h</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">h</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mclose">]</span></span></span></span>，运算结果的维度是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>[</mo><mi>b</mi><mi>a</mi><mi>t</mi><mi>c</mi><mi>h</mi><mo separator="true">,</mo><mi>h</mi><mi>i</mi><mi>d</mi><mi>d</mi><mi>e</mi><mi>n</mi><mtext> </mtext><mi>l</mi><mi>e</mi><mi>n</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">[batch, hidden\space len]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathdefault">b</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">c</span><span class="mord mathdefault">h</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">h</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mclose">]</span></span></span></span>。</p>
<p>将两个结果进行相加得到要输入到下一时刻的隐层状态<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>h</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">h_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p>
<p><strong>多层RNN</strong></p>
<p>对于多层的RNN，包含了多个线性层，如下图所示是一个二层的RNN：</p>
<figure data-type="image" tabindex="9"><img src="https://cactusii.github.io//post-images/1657554602087.png" alt="" loading="lazy"></figure>
<p>每一层线性层将上一层的输出和上一时刻的隐层状态作为输入，以二层为例，第一层以嵌入向量和上一时刻隐层状态作为输入，第二层以第一层的输出和上一时刻的隐层状态作为输入。其维度为：</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>t</mi></msub><mi mathvariant="normal">/</mi><mi>f</mi><mi>e</mi><mi>a</mi><mi>t</mi><mi>u</mi><mi>r</mi><mi>e</mi><mtext> </mtext><mo>[</mo><mi>b</mi><mi>a</mi><mi>t</mi><mi>c</mi><mi>h</mi><mo separator="true">,</mo><mi>f</mi><mi>e</mi><mi>a</mi><mi>t</mi><mi>u</mi><mi>r</mi><mi>e</mi><mtext> </mtext><mi>l</mi><mi>e</mi><mi>n</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">x_t/feature\space [batch, feature\space len]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">e</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mspace"> </span><span class="mopen">[</span><span class="mord mathdefault">b</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">c</span><span class="mord mathdefault">h</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">e</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mclose">]</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>w</mi><mrow><mi>x</mi><mi>h</mi></mrow><mn>1</mn></msubsup><mtext> </mtext><mo>[</mo><mi>h</mi><mi>i</mi><mi>d</mi><mi>d</mi><mi>e</mi><mi>n</mi><mtext> </mtext><mi>l</mi><mi>e</mi><mi>n</mi><mo separator="true">,</mo><mi>f</mi><mi>e</mi><mi>a</mi><mi>t</mi><mi>u</mi><mi>r</mi><mi>e</mi><mtext> </mtext><mi>l</mi><mi>e</mi><mi>n</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">w_{xh}^1\space [hidden\space len, feature \space len]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.097216em;vertical-align:-0.2831079999999999em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4168920000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight">h</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mopen">[</span><span class="mord mathdefault">h</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">e</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mclose">]</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>h</mi><mi>t</mi><mn>1</mn></msubsup><mtext> </mtext><mo>[</mo><mi>b</mi><mi>a</mi><mi>t</mi><mi>c</mi><mi>h</mi><mo separator="true">,</mo><mi>h</mi><mi>i</mi><mi>d</mi><mi>d</mi><mi>e</mi><mi>n</mi><mtext> </mtext><mi>l</mi><mi>e</mi><mi>n</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">h_t^1\space [batch, hidden \space len]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mopen">[</span><span class="mord mathdefault">b</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">c</span><span class="mord mathdefault">h</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">h</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mclose">]</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>w</mi><mrow><mi>h</mi><mi>h</mi></mrow><mn>1</mn></msubsup><mtext> </mtext><mo>[</mo><mi>h</mi><mi>i</mi><mi>d</mi><mi>d</mi><mi>e</mi><mi>n</mi><mtext> </mtext><mi>l</mi><mi>e</mi><mi>n</mi><mo separator="true">,</mo><mi>h</mi><mi>i</mi><mi>d</mi><mi>d</mi><mi>e</mi><mi>n</mi><mtext> </mtext><mi>l</mi><mi>e</mi><mi>n</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">w_{hh}^1\space[hidden\space len ,hidden\space len]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.097216em;vertical-align:-0.2831079999999999em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4168920000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight">h</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mopen">[</span><span class="mord mathdefault">h</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">h</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mclose">]</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>w</mi><mrow><mi>x</mi><mi>h</mi></mrow><mn>2</mn></msubsup><mtext> </mtext><mo>[</mo><mi>b</mi><mi>a</mi><mi>t</mi><mi>c</mi><mi>h</mi><mo separator="true">,</mo><mi>h</mi><mi>i</mi><mi>d</mi><mi>d</mi><mi>e</mi><mi>n</mi><mtext> </mtext><mi>l</mi><mi>e</mi><mi>n</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">w_{xh}^2\space [batch, hidden\space len]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.097216em;vertical-align:-0.2831079999999999em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4168920000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight">h</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mopen">[</span><span class="mord mathdefault">b</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">c</span><span class="mord mathdefault">h</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">h</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mclose">]</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>w</mi><mrow><mi>h</mi><mi>h</mi></mrow><mn>2</mn></msubsup><mtext> </mtext><mo>[</mo><mi>h</mi><mi>i</mi><mi>d</mi><mi>d</mi><mi>e</mi><mi>n</mi><mtext> </mtext><mi>l</mi><mi>e</mi><mi>n</mi><mo separator="true">,</mo><mi>h</mi><mi>i</mi><mi>d</mi><mi>d</mi><mi>e</mi><mi>n</mi><mtext> </mtext><mi>l</mi><mi>e</mi><mi>n</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">w_{hh}^2\space [hidden\space len,hidden\space len]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.097216em;vertical-align:-0.2831079999999999em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4168920000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight">h</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mopen">[</span><span class="mord mathdefault">h</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">h</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mclose">]</span></span></span></span></li>
</ul>
<blockquote>
<p>一个句子有多少个单词，代表RNN进行多少次时间节点的运算</p>
</blockquote>
<h4 id="torchnnrnn">torch.nn.RNN</h4>
<p>而在pytorch中使用RNN的API如下：</p>
<pre><code class="language-python">torch.nn.RNN(input_size, hidden_size, num_layers)

# - input_size 表示嵌入向量的维度，例如100
# - hidden_size 表示隐层状态向量的维度，例如20
# - num_layers 表示隐层层数/线性层层数
</code></pre>
<p><img src="https://cactusii.github.io//post-images/1657554621837.png" alt="" loading="lazy">\</p>
<p>通过此API创建一个RNN网络模型，然后模型的输入和刚才图中的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">x_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>不一样，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">x_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是每个时间状态下的输入，而在pytorch中RNN模型的输入是不需要单步处理每个时间状态的输入的，只需要将整个输入数据feed到模型中，模型会自动处理每个时间状态的输入。</p>
<pre><code class="language-python"># 模型的输入x_input, h_0; 输出h_t,out

# x_input:[seq len, batch, feature len]
# - seq len 表示每个句子的单词数
# - batch 表示多少个句子
# - feature len 表示每个单词的嵌入维度
# h_0:[layer, batch, hidden len] h_0可以不给
# - layer RNN线性层数
# - batch 
# - hidden len 表示隐层向量维度

# h_t的维度和h_0一样，代表最后一个时间节点的隐层状态
# out：[seq len, batch, hidden len]输出每一个时间节点的最后一层的隐层状态
</code></pre>
<figure data-type="image" tabindex="10"><img src="https://cactusii.github.io//post-images/1657554637513.png" alt="" loading="lazy"></figure>
<p>使用示例：</p>
<pre><code class="language-python">rnn = torch.nn.RNN(input_size=100, hidden_size=20, num_layers=2, batch_first=False)

x_input = torch.randn(5, 3, 100) # seq len, batch, feature len
h_0 = torch.randn(2, 3, 20) # layer len, batch, hidden len

h_n, out = rnn(x_input, h_0)

print(h_n.shape)  # torch.Size([5, 3, 20])
print(out.shape)  # torch.Size([2, 3, 20])
</code></pre>
<h4 id="lstm">LSTM</h4>
<pre><code class="language-python">torch.nn.LSTM(input_size, hidden_size, num_layers, bidirectional=False)

# - input_size: The number of expected features in the input x
# - hidden_size: The number of features in the hidden state h
# - bidirectional: 双向LSTM，默认为False

# 模型的输入
# x_input [seq len, batch, H_in] H_in=input_size
# h_0 [D*num_layers, batch, H_out] 双向D=2，单向D=1；H_out=hidden_size
# c_0 [D*num_layers, batch, H_cell] H_cell=hidden_size

# 模型的输出
# output [seq len, batch, D*H_out]
# h_n [D*num_layers, batch, H_out]
# c_n [D*num_layers, batch, H_cell]

# 示例
rnn = nn.LSTM(input_size=10, hidden_size=20, num_layers=2)
x_input = torch.randn(5, 3, 10) # seq len, batch, input_size
h_0 = torch.randn(2, 3, 20) # 1*num_layers, batch, hidden_size
c_0 = torch.randn(2, 3, 20) # 1*num_layers, batch, hidden_size
output, (h_n, c_n) = rnn(x_input, h_0, c_0)
</code></pre>
<h4 id="gru">GRU</h4>
<pre><code class="language-python">torch.nn.GRU(input_size, hidden_size, num_layers, bidirectional=False)

# - input_size: The number of expected features in the input x
# - hidden_size: The number of features in the hidden state h
# - bidirectional: 双向GRU，默认为False

# 模型的输入
# x_input [seq len, batch, H_in] H_in=input_size
# h_0 [D*num_layers, batch, H_out] 双向D=2，单向D=1；H_out=hidden_size

# 模型的输出
# output [seq len, batch, D*H_out]
# h_n [D*num_layers, batch, H_out]

# 示例
rnn = nn.GRU(input_size=10, hidden_size=20, num_layers=2)
x_input = torch.randn(5, 3, 10) # seq len, batch, input_size
h_0 = torch.randn(2, 3, 20) # 1*num_layers, batch, hidden_size
output, h_n = rnn(x_input, h_0)
</code></pre>
<h3 id="12-词嵌入">12. 词嵌入</h3>
<h4 id="121-torchnnembedding">12.1 torch.nn.Embedding</h4>
<p>在torch中使用嵌入模型非常简单，是需要使用<code>torch.nn.Embedding(num_embeddings, embedding_dim)</code></p>
<ul>
<li><strong>num_embeddings</strong> [int]– size of the dictionary of embeddings</li>
<li><strong>embedding_dim</strong> [int] – the size of each embedding vector</li>
<li><strong>padding_idx</strong> [int] - 索引为padding_idx的词向量全部为0，把padding_idx设置为填充的值，如padding_idx=3，训练过程中索引为3的将始终设置为0，不进行参数更新，也就是说，为了便于模型训练需统一句子长度，对那些句子长度不够的句子进行填充，比如用值3进行填充，当用nn.Embedding()进行词向量嵌入时，对应的索引为3的向量将变为全为0的向量。这样就减少了填充值对模型训练的影响。例如：句子[2, 4, 5]和[1, 2, 7, 8, 9]，两个句子不一样长，那么在输入到模型的时候就可以转换为[2, 4, 5, 3, 3], [1, 2, 7, 8, 9]。</li>
</ul>
<p><code>Embedding</code>创建一个大的矩阵，矩阵的每一行代表一个单词，默认是随机初始化的。</p>
<pre><code class="language-python"># 整个字典一共有5个单词，每个单词向量的维度是20
embeds = torch.nn.Embedding(num_embeddings=5, embedding_dim=20)

# 读取一个词向量，output = embeds(input)
# - input: IntTensor或LongTensor的任意shape
# - output: (*, H),*代表input的shape，H=embeding_dim
input = torch.IntTensor([[0, 1, 2], [3, 4, 1]])  # torch.Size([2, 3])

output = embeds(input)
print(output.shape)  # torch.Size([2, 3, 20])
</code></pre>
<blockquote>
<p>一般在NLP中创建Embedding字典放在网络模型之前，作为预处理，这些embedding默认是随机初始化的，但在训练的过程中会进行训练。</p>
</blockquote>
<p>除此之外，我们也可以导入已经训练好的词向量，但是需要设置训练过程中不更新：</p>
<pre><code class="language-python">embeds.weight = torch.nn.Parameter(emb)
# 固定embedding
embeds.weight.requires_grad = False
</code></pre>
<h3 id="13-attention">13. Attention</h3>
<h3 id="14-其他常见操作">14. 其他常见操作</h3>
<h4 id="141-扁平化操作">14.1 扁平化操作</h4>
<pre><code class="language-python">class Flatten(nn.Module):
    def __init__(self):
        super(Flatten, self).__init__()
        
    def forward(self, input):
        return input.view(input.size(0), -1)
    
</code></pre>
<h4 id="142-torchmanual_seed">14.2 torch.manual_seed()</h4>
<p>在一个实验中，如果需要使用到随机数，由于每次实验都需要生成数据，设置随机种子是为了确保<strong>每次生成固定的随机数（生成的随机数是一样的）</strong>，这就使得<strong>每次实验结果显示一致了</strong>，有利于实验的比较和改进。使得每次运行该 python文件时生成的随机数相同。</p>
<p>用比较学术的话来讲，torch.manual_seed()为 <strong>CPU/GPU</strong> 中设置种子，生成随机数。</p>
<p>示例：</p>
<pre><code class="language-python">t.manual_seed(1000)

def get_fake_data(batch_size=8):
    '''产生随机数据：y= x*2+3 , 加上一些噪声'''
    x = t.rand(batch_size,1)*20
    y = x * 2 +( 1 + t.randn(batch_size,1)) * 3
    return x,y

x , y = get_fake_data()
plt.scatter(x.squeeze().numpy(),y.squeeze().numpy())
</code></pre>
<h4 id="143-梯度弥散和梯度爆炸">14.3 梯度弥散和梯度爆炸</h4>
<p><strong>梯度弥散</strong></p>
<p>当网络的层数非常深时，会出现梯度非常小的问题，可能会接近于0，这样网络可能长时间得不到更新。</p>
<p><strong>梯度爆炸</strong></p>
<p>如果梯度在某个过程中计算的值很大，再经历一系列的乘方会出现梯度非常大的情况，因此需要再计算的过程中检查梯度是否大于自定义的阈值，将其限制在阈值范围内，这个操作称为Gradient Clipping：</p>
<pre><code class="language-python">loss = loss_fun(output, y)
model.zero_grad()
loss.backward()
for p in model.parameters():
    torch.nn.utils.clip_grad_norm_(p, 10)  # 限制在10的范围内
optimizer.step()
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【python】logging库]]></title>
        <id>https://cactusii.github.io/post/python-logging-ku/</id>
        <link href="https://cactusii.github.io/post/python-logging-ku/">
        </link>
        <updated>2022-07-03T03:09:24.000Z</updated>
        <content type="html"><![CDATA[<h3 id="日志等级">日志等级</h3>
<p>日志等级(level)：DEBUG/INFO/WARNING/ERROR/CRITICAL</p>
<p>开发和部署时可以使用DEBUG或INFO级别的日志获取尽可能详细的日志信息来进行开发和部署调试；应用上线或部署生产环境，应该使用更高级别的日志来降低机器的I/O压力。</p>
<h3 id="使用方式">使用方式</h3>
<ol>
<li>使用logging提供的模块级别函数</li>
<li>使用logging日志系统的四大组件</li>
</ol>
<p><strong>模块级别常用函数：</strong></p>
<p><code>logging.debug()</code>、<code>logging.info()</code>、<code>logging.warning()</code>、<code>logging.error()</code>、<code>logging.critical()</code>、<code>logging.log()</code>、<code>logging.basicConfig()</code></p>
<p>这些函数可以直接拿来调用，默认是使用root logger进行日志输出，其中<code>logging.log()</code>创建一条严重级别的日志，<code>logging.basicConfig()</code>是对root logger()进行<strong>一次性</strong>(多次配置不会产生作用)配置，包括要记录的日志级别、日志格式、日志输出位置、日志文件的打开模式等信息。</p>
<p>另外，日志器（Logger）是有层级关系的，上面调用的logging模块级别的函数所使用的日志器是RootLogger类的实例，其名称为root，它是处于日志器层级关系最顶层的日志器，且该实例是以单例模式存在的。</p>
<p>示例：</p>
<pre><code class="language-python">import logging

logging.debug(&quot;This is a debug log.&quot;)
logging.info(&quot;This is a info log.&quot;)
logging.warning(&quot;This is a warning log.&quot;)
logging.error(&quot;This is a error log.&quot;)
logging.critical(&quot;This is a critical log.&quot;)

# 默认的日志格式是：
# 日志级别:日志器名称:日志内容
LOG_FORMAT = &quot;%(asctime)s - %(levelname)s - %(message)s&quot;
logging.basicConfig(filename='my.log', level=logging.DEBUG, format=LOG_FORMAT)
</code></pre>
<p>format格式：</p>
<table>
<thead>
<tr>
<th>字段/属性名称</th>
<th>使用格式</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>asctime</td>
<td>%(asctime)s</td>
<td>日志事件发生的时间–人类可读时间，如：2003-07-08 16:49:45,896</td>
</tr>
<tr>
<td>created</td>
<td>%(created)f</td>
<td>日志事件发生的时间–时间戳，就是当时调用time.time()函数返回的值</td>
</tr>
<tr>
<td>relativeCreated</td>
<td>%(relativeCreated)d</td>
<td>日志事件发生的时间相对于logging模块加载时间的相对毫秒数（目前还不知道干嘛用的）</td>
</tr>
<tr>
<td>msecs</td>
<td>%(msecs)d</td>
<td>日志事件发生事件的毫秒部分</td>
</tr>
<tr>
<td>levelname</td>
<td>%(levelname)s</td>
<td>该日志记录的文字形式的日志级别（‘DEBUG’, ‘INFO’, ‘WARNING’, ‘ERROR’, ‘CRITICAL’）</td>
</tr>
<tr>
<td>levelno</td>
<td>%(levelno)s</td>
<td>该日志记录的数字形式的日志级别（10, 20, 30, 40, 50）</td>
</tr>
<tr>
<td>name</td>
<td>%(name)s</td>
<td>所使用的日志器名称，默认是’root’，因为默认使用的是 rootLogger</td>
</tr>
<tr>
<td>message</td>
<td>%(message)s</td>
<td>日志记录的文本内容，通过 <code>msg % args</code>计算得到的</td>
</tr>
<tr>
<td>pathname</td>
<td>%(pathname)s</td>
<td>调用日志记录函数的源码文件的全路径</td>
</tr>
<tr>
<td>filename</td>
<td>%(filename)s</td>
<td>pathname的文件名部分，包含文件后缀</td>
</tr>
<tr>
<td>module</td>
<td>%(module)s</td>
<td>filename的名称部分，不包含后缀</td>
</tr>
<tr>
<td>lineno</td>
<td>%(lineno)d</td>
<td>调用日志记录函数的源代码所在的行号</td>
</tr>
<tr>
<td>funcName</td>
<td>%(funcName)s</td>
<td>调用日志记录函数的函数名</td>
</tr>
<tr>
<td>process</td>
<td>%(process)d</td>
<td>进程ID</td>
</tr>
<tr>
<td>processName</td>
<td>%(processName)s</td>
<td>进程名称，Python 3.1新增</td>
</tr>
<tr>
<td>thread</td>
<td>%(thread)d</td>
<td>线程ID</td>
</tr>
<tr>
<td>threadName</td>
<td>%(thread)s</td>
<td>线程名称</td>
</tr>
</tbody>
</table>
<p><strong>四大组件：</strong></p>
<table>
<thead>
<tr>
<th>组件名称</th>
<th>对应类名</th>
<th>功能描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>日志器</td>
<td>Logger</td>
<td>提供了应用程序可一直使用的接口</td>
</tr>
<tr>
<td>处理器</td>
<td>Handler</td>
<td>将logger创建的日志记录发送到合适的目的输出</td>
</tr>
<tr>
<td>过滤器</td>
<td>Filter</td>
<td>提供了更细粒度的控制工具来决定输出哪条日志记录，丢弃哪条日志记录</td>
</tr>
<tr>
<td>格式器</td>
<td>Formatter</td>
<td>决定日志记录的最终输出格式</td>
</tr>
</tbody>
</table>
<p>其中<strong>日志器</strong>就将日志信息输出到目标位置，<strong>处理器</strong>就是指定输出位置的，<strong>日志器</strong>可以设置多个<strong>处理器</strong>将同一日志输出到不同的位置，每个<strong>处理器</strong>都可以设置自己的<strong>过滤器</strong>实现日志过滤，每个处理器也可以设置<strong>格式器</strong>。</p>
<p>即日志器（logger）是入口，真正干活儿的是处理器（handler），处理器（handler）还可以通过过滤器（filter）和格式器（formatter）对要输出的日志内容做过滤和格式化等处理操作。</p>
<p>示例：</p>
<pre><code class="language-python">import logging
import colorlog

logging.basicConfig(level=logging.ERROR)

my_logger = logging.getLogger(__name__)
my_logger.setLevel(logging.DEBUG)
stream_handler = logging.StreamHandler()
formatter = colorlog.ColoredFormatter(
           &quot;%(log_color)s%(levelname)1.1s %(asctime)s %(reset)s| %(message_log_color)s%(levelname)-8s %(reset)s| %(&quot;
           &quot;log_color)s[%(filename)s%(reset)s:%(log_color)s%(module)s%(reset)s:%(log_color)s%(funcName)s%(&quot;
           &quot;reset)s:%(log_color)s%(&quot;&quot;lineno)d] %(reset)s- %(white)s%(message)s&quot;,
           reset=True,
           log_colors={
              'DEBUG': 'cyan',
              'INFO': 'green',
              'WARNING': 'yellow',
              'ERROR': 'red',
              'CRITICAL': 'red',
           },
           secondary_log_colors={
               &quot;message&quot;: {
                   &quot;DEBUG&quot;: &quot;blue&quot;,
                   &quot;INFO&quot;: &quot;blue&quot;,
                   &quot;WARNING&quot;: &quot;blue&quot;,
                   &quot;ERROR&quot;: &quot;red&quot;,
                   &quot;CRITICAL&quot;: &quot;bold_red&quot;
               }
           },
           style=&quot;%&quot;
       )  # 日志输出格式
stream_handler.setFormatter(formatter)
my_logger.addHandler(stream_handler)
my_logger.propagate = False  # 关闭向父logger传递，避免重复输出

</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【go】channel原理]]></title>
        <id>https://cactusii.github.io/post/go-channel-yuan-li/</id>
        <link href="https://cactusii.github.io/post/go-channel-yuan-li/">
        </link>
        <updated>2022-06-16T15:43:15.000Z</updated>
        <content type="html"><![CDATA[<h1 id="channel实现原理">channel实现原理</h1>
<p>协程A在执行过程中创建了子协程A1，A2... An，然后等待子协程执行完后退出，那么可以通过以下方式完成对子协程的控制：</p>
<ol>
<li>使用channel控制子协程</li>
<li>waitGroup信号量机制控制子协程</li>
<li>Context上下文控制子协程</li>
</ol>
<h2 id="channel">channel</h2>
<h3 id="简单介绍">简单介绍</h3>
<p>channel主要是提供给两个协程之间消息传递的，channel分为<strong>同步</strong>和<strong>异步</strong>两种。</p>
<p>同步的channel缓冲区大小为1，当缓冲区存在数据，发送发阻塞，直到数据被接收方取出；当缓冲区为空，接收方阻塞，直到发送方发送数据。</p>
<p>异步的channel缓冲区大小大于1，当缓冲区满，发送发阻塞，直到有接收方取出数据；当缓冲区为空，接收方阻塞，直到发送方发送数据。</p>
<h3 id="channel实现原理-2">channel实现原理</h3>
<p>channel数据结构(runtime/chan.go)：</p>
<pre><code class="language-go">type hchan struct {
 qcount   uint           // total data in the queue（循环队列元素数量）
 dataqsiz uint           // size of the circular queue（循环队列大小）
 buf      unsafe.Pointer // points to an array of dataqsiz elements（循环队列指针）
 elemsize uint16 //chan中元素大小
 closed   uint32 //是否已经close
 elemtype *_type // element type（chan元素类型）
 sendx    uint   // send index（send在buf中索引）
 recvx    uint   // receive index（recv在buf中索引）
 recvq    waitq  // list of recv waiters（receive的等待队列）
 sendq    waitq  // list of send waiters（sender等待队列）

 // lock protects all fields in hchan, as well as several
 // fields in sudogs blocked on this channel.
 //
 // Do not change another G's status while holding this lock
 // (in particular, do not ready a G), as this can deadlock
 // with stack shrinking.
 lock mutex //互斥锁，保护所有字段，上面注释已经讲得非常明确了
}
</code></pre>
<h4 id="chan初始化">chan初始化</h4>
<p>chan在初始化时，会根据容量大小选择调用<code>makechan64</code>或者<code>makechan</code>，其中<code>makechan64</code>只是做了size检查，然后底层还是调用<code>makechan</code>实现的，<code>makechan</code>来生成<code>hchan</code>对象。</p>
<pre><code class="language-go">func makechan(t *chantype, size int) *hchan {
    elem := t.elem
    //编译器会检查类型是否安全
    // compiler checks this but be safe.
    if elem.size &gt;= 1&lt;&lt;16 {//是否 &gt;= 2^16
        throw(&quot;makechan: invalid channel element type&quot;)
    }
    if hchanSize%maxAlign != 0 || elem.align &gt; maxAlign {
        throw(&quot;makechan: bad alignment&quot;)
    }
    mem, overflow := math.MulUintptr(elem.size, uintptr(size))
    if overflow || mem &gt; maxAlloc-hchanSize || size &lt; 0 {
        panic(plainError(&quot;makechan: size out of range&quot;))
    }
    var c *hchan
    switch {
        case mem == 0:
        // chan的size或元素的size为0，就不必创建buf
        c = (*hchan)(mallocgc(hchanSize, nil, true))
        // 竞争检测器使用此位置进行同步
        c.buf = c.raceaddr()
        case elem.ptrdata == 0:
        // 元素不是指针，分配一块连续的内存给hchan数据结构和buf
        c = (*hchan)(mallocgc(hchanSize+mem, nil, true))
        // hchan数据结构后面紧接着就是buf
        c.buf = add(unsafe.Pointer(c), hchanSize)
        default:
        // Elements contain pointers.
        c = new(hchan)
        c.buf = mallocgc(mem, elem, true)
    }
    // 将元素大小、类型、容量都记录下来
    c.elemsize = uint16(elem.size)
    c.elemtype = elem
    c.dataqsiz = uint(size)
    lockInit(&amp;c.lock, lockRankHchan)
    if debugChan {
        print(&quot;makechan: chan=&quot;, c, &quot;; elemsize=&quot;, elem.size, &quot;; dataqsiz=&quot;, size, &quot;\n&quot;)
    }
    return c
}
</code></pre>
<p>其实就是根据不同容量和元素类型，来分配不同对象来初始化chan对象的字段，最后返回hchan对象。</p>
<h4 id="send方法">send方法</h4>
<p>send方法底层调用时会发生：</p>
<ol>
<li>锁定整个channel；</li>
<li>首先判断chan是否为nil(未初始化)，如果是nil，发送者会永远阻塞；</li>
<li><mark>如果chan不为nil，并且chan满了，则直接返回；</mark></li>
<li>如果chan被close了，会引发panic；</li>
<li>如果有recvq有等待，说明buf为空，那么直接从recvq中取出一个等待的goroutine，并将数据直接写入；</li>
<li>如果没有recvq，考虑buf空间是不是已满，如果队列未满，则将数据拷贝到buf中(通过哦memmove()函数内存拷贝)；如果队列满了，那么发送者的goroutine就会加入到发送者的等待队列中并阻塞，直到被唤醒(数据被取走，或者chan被close)。</li>
</ol>
<h4 id="recv方法">recv方法</h4>
<ol>
<li>如果chan为nil，接收者会被永远阻塞；</li>
<li>如果chan不为nil，但chan为空，接收者就会被阻塞，直到有sender发送数据或chan被close；</li>
<li>如果chan被close了，并且队列中没有缓存的元素，那么返回；</li>
<li>如果存在sender等待：如果是同步的channel，那么直接将sender的数据复制给reveiver，否则就从buf中；取出一个元素给reveiver，把sender的数据添加到队列尾部；</li>
<li>如果没有sender等待：如果队列中有元素，就取出一个元素给receiver；如果队列中没有元素，那么当前receiver就会被阻塞，直到它从sender中接收了数据，或者chan被close才返回。</li>
</ol>
<p>我认为上面原理性的东西了解以下就可以，掌握它的特性即可，在生产环境中避免出现死锁或者无限制的协程创建等问题。</p>
<h3 id="channel状态">channel状态</h3>
<p>channel有三种状态：</p>
<ol>
<li>nil，即没有初始化的状态；</li>
<li>正常状态，可以进行正常读写；</li>
<li>closed已关闭</li>
</ol>
<p>向不同的状态的channel收发数据：</p>
<ol>
<li>向nil状态的channel收发，会进入阻塞状态；</li>
<li>向已关闭的channel发送数据，会引发panic；</li>
<li>向已关闭的channel接收数据，会返回缓冲值或零值。</li>
<li>close nil/closed状态的channel会引发panic</li>
</ol>
<p>当channel使用完毕，可以使用内置函数<code>close()</code>函数来关闭channel。channel是引用类型，channel是可以进行垃圾回收的，所以关闭channel并不是必须的，只要没有协程引用channel，最终就会被GC处理。</p>
<p>在使用的过程中不要让协程阻塞到channel上，这种情况很难检测到，而且会造成channel和阻塞在channel的协程占有的资源无法被GC清理最终导致内存泄漏。</p>
<h3 id="使用场景">使用场景</h3>
<p>https://zhuanlan.zhihu.com/p/408598288</p>
]]></content>
    </entry>
</feed>